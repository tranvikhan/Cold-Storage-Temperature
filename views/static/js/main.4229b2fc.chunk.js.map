{"version":3,"sources":["redux/roomAccess/constants.js","components/Layout.js","routes/index.js","routes/Routes.js","App.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","helpers/roomUtils.js","redux/roomList/reducers.js","redux/notification/reducers.js","redux/roomData/reducers.js","redux/roomStructrure/reducers.js","redux/roomAccess/reducers.js","redux/appMenu/utils.js","redux/roomActivate/reducers.js","redux/roomArea/reducers.js","redux/reducers.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/saga.js","redux/roomList/saga.js","redux/notification/saga.js","redux/roomData/saga.js","redux/roomStructrure/saga.js","redux/roomAccess/saga.js","redux/roomActivate/saga.js","redux/roomArea/saga.js","redux/sagas.js","redux/store.js","index.js","redux/roomData/actions.js","redux/roomData/constants.js","redux/roomStructrure/constants.js","redux/roomActivate/constants.js","redux/notification/constants.js","redux/auth/constants.js","redux/roomArea/actions.js","redux/layout/constants.js","redux/roomList/actions.js","redux/roomStructrure/actions.js","redux/roomAccess/actions.js","redux/roomActivate/actions.js","redux/auth/actions.js","redux/appMenu/constants.js","redux/notification/actions.js","constants/layout.js","redux/layout/actions.js","helpers/authUtils.js","redux/appMenu/actions.js","redux/roomArea/constants.js","helpers/api.js","constants/apiConfig.js","redux/roomList/constants.js"],"names":["GET_USER_ACCESS","GET_USER_ACCESS_SUCCESS","GET_USER_ACCESS_FAILED","ADD_ACCESS","ADD_ACCESS_SUCCESS","ADD_ACCESS_FAILED","UPDATE_ACCESS","UPDATE_ACCESS_SUCCESS","UPDATE_ACCESS_FAILED","REPLY_ACCESS","REPLY_ACCESS_SUCCESS","REPLY_ACCESS_FAILED","DELETE_ACCESS","DELETE_ACCESS_SUCCESS","DELETE_ACCESS_FAILED","AuthLayout","React","lazy","VerticalLayout","HorizontalLayout","withLayout","WrappedComponent","HOC","getLayout","isUserAuthenticated","layoutCls","props","layout","layoutType","layoutConstants","Layout","this","fallback","Component","connect","state","Login","Logout","Register","ForgetPassword","Confirm","Status","Report","SensorMap","AreaConfig","Management","WareHouseConfig","ApiService","Store","Help","About","PrivateRoute","component","roles","rest","currentRole","useSelector","RoomList","currentRoom","role","render","includes","to","pathname","from","location","rootRoute","path","exact","route","statusRoutes","name","icon","FeatherIcon","reportRoutes","configRoutes","header","moreRoute","authRoutes","children","Route","allRoutes","authProtectedRoutes","allFlattenRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","Routes","map","index","key","App","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","action","type","CHANGE_LAYOUT","payload","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","user","getLoggedInUser","loading","Auth","LOGIN_USER","LOGIN_USER_SUCCESS","errorLogin","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","errorRegister","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","passwordResetStatus","errorFogot","FORGET_PASSWORD_FAILED","AppMenu","INIT_MENU","INIT_MENU_SUCCESS","CHANGE_ACTIVE_MENU_FROM_LOCATION","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","setRoomCookieDefault","room","cookies","Cookies","set","JSON","stringify","remove","getRoomCookieDefault","get","parse","error","myRoom","sharedRoom","currentRoomInfo","GET_ROOM_LIST","GET_ROOM_LIST_SUCCESS","rooms","accesses","newMyRoom","filter","e","newSharedRoom","_id","undefined","GET_ROOM_LIST_FAILED","SET_CURR_ROOM","GET_CURR_ROOM_INFO","GET_CURR_ROOM_INFO_SUCCESS","GET_CURR_ROOM_INFO_FAILED","CREATE_ROOM","CREATE_ROOM_SUCCESS","newRoom","newListMyRoom","CREATE_ROOM_FAILED","UPDATE_ROOM","UPDATE_ROOM_SUCCESS","tempUpdateRoom","newSharedRoomU","newMyRoomU","it","UPDATE_ROOM_FAILED","DELETE_ROOM","DELETE_ROOM_SUCCESS","tempShareRoom","r","room_id","tempMyRoom","tempCurrent","DELETE_ROOM_FAILED","Notification","GET_NOTIFICATION_LIST","GET_NOTIFICATION_LIST_SUCCESS","list","GET_NOTIFICATION_LIST_FAILED","DELETE_NOTIFICATION","DELETE_NOTIFICATION_SUCCESS","noti","notification_id","DELETE_NOTIFICATION_FAILED","DELETE_ALL_NOTIFICATION","DELETE_ALL_NOTIFICATION_SUCCESS","DELETE_ALL_NOTIFICATION_FAILED","UPDATE_NOTIFICATION","newState","targetIndex","findIndex","id","data","PUSH_NOTIFICATION","newList","unshift","notification","areaData","sensorData","cubeData","currentData","RoomData","GET_AREA_DATA","GET_AREA_DATA_SUCCESS","cr","Array","length","shift","GET_AREA_DATA_FAILED","GET_CURRENT_DATA","GET_CURRENT_DATA_SUCCESS","GET_CURRENT_DATA_FAILED","GET_SENSOR_DATA","GET_SENSOR_DATA_SUCCESS","GET_SENSOR_DATA_FAILED","GET_CUBE_DATA","GET_CUBE_DATA_SUCCESS","GET_CUBE_DATA_FAILED","structure","RoomStructrure","GET_CURR_ROOM_SENSOR_MAP","GET_CURR_ROOM_SENSOR_MAP_SUCCESS","GET_CURR_ROOM_SENSOR_MAP_FAILED","ADD_SENSOR","ADD_SENSOR_SUCCESS","ADD_SENSOR_FAILED","UPDATE_SENSOR","UPDATE_SENSOR_SUCCESS","UPDATE_SENSOR_FAILED","DELETE_SENSOR","DELETE_SENSOR_SUCCESS","DELETE_SENSOR_FAILED","RoomAccess","newAccesses","access","ac","newAccessesReply","access_id","uuid","f","menuItems","assignIdAndParent","parentId","active","activates","stations","RoomActivate","GET_ACTIVATES","GET_ACTIVATES_FAILED","GET_ACTIVATES_SUCCESS","ADD_ACTIVATE","ADD_ACTIVATE_FAILED","ADD_ACTIVATE_SUCCESS","newActivates","activate","GET_STATIONS","GET_STATIONS_FAILED","GET_STATIONS_SUCCESS","DELETE_ACTIVATE","DELETE_ACTIVATE_FAILED","DELETE_ACTIVATE_SUCCESS","at","activate_id","areas","currentArea","RoomArea","GET_AREAS","GET_AREAS_SUCCESS","GET_AREAS_FAILED","GET_AREA_INFO","GET_AREA_INFO_SUCCESS","area","GET_AREA_INFO_FAILED","ADD_AREA","ADD_AREA_SUCCESS","newAreas","ADD_AREA_FAILED","UPDATE_AREA","UPDATE_AREA_SUCCESS","UPDATE_AREA_FAILED","DELETE_AREA","DELETE_AREA_SUCCESS","area_id","DELETE_AREA_FAILED","ADD_MONITOR","ADD_MONITOR_SUCCESS","monitors","ADD_MONITOR_FAILED","UPDATE_MONITOR","UPDATE_MONITOR_SUCCESS","newMonitors","monitor","UPDATE_MONITOR_FAILED","DELETE_MONITOR","DELETE_MONITOR_SUCCESS","DELETE_MONITOR_FAILED","combineReducers","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","username","password","options","method","headers","url","call","requestApi","response","status","result","put","loginUserSuccess","setCurrentRoom","getNotificationListFailed","getAreaDataFailed","getCurrentDataFailed","getSensorDataFailed","getCubeDataFailed","getCurrentRoomInfoFailed","loginUserFailed","history","email","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","body","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","width","theme","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","window","indexOf","assignIds","initMenuSuccess","activatedMenuItemIds","changeActiveMenuFromLocationSuccess","getRoomList","getRoomInfo","updateRoom","deleteRoom","watchGetRoomList","watchGetCurrentRoomInfo","watchCreateRoom","watchUpdateRoom","watchDeleteRooms","RoomListSaga","accessToken","getRoomListSuccess","getRoomListFailed","params","getCurrentRoomInfoSuccess","createRoomSuccess","createRoomFailed","room_info","updateRoomSuccess","updateRoomFailed","deleteRoomSuccess","deleteRoomFailed","getNotificationList","deleteNotification","deleteAllNotification","watchGetNotification","watchDeleteNotification","watchDeleteAllNotification","res","getNotificationListSuccess","notifications","deleteNotificationSuccess","deleteNotificationFailed","deleteAllNotificationSuccess","deleteAllNotificationFailed","getAreaData","getCurrentData","getSensorData","getCubeData","watchGetAreaData","watchGetCurrentData","watchGetSensorData","watchGetCubeData","RoomDataSaga","getAreaDataSuccess","getCurrentDataSuccess","getSensorDataSuccess","getCubeDataSuccess","getCurrentRoomSensorMap","updateSensor","addSensor","deleteSensor","watchGetCurrentRoomSensorMap","watchUpdateSensor","watchAddeSensor","watchDeleteSensor","roomStructrureSaga","getRoomStructureSuccess","getRoomStructureFailed","sensor_id","updateSensorSuccess","updateSensorFailed","addSensorSuccess","addSensorFailed","deleteSensorSuccess","deleteSensorFailed","getUserAccessApi","addAccessApi","updateAccessApi","replyAccessApi","deleteAccessApi","watchGetUserAccess","watchAddAccess","watchUpdateAccess","watchReplyAccess","watchDeleteAccess","roomAccessSaga","getUserAccessSuccess","getUserAccessFailed","user_id","AddAccessSuccess","AddAccessFailed","updateAccessSuccess","updateAccessFailed","accepted","replyAccessSuccess","replyAccessFailed","deleteAccessSuccess","deleteAccessFailed","getActivatesApi","getStationsApi","addActivateApi","deleteActivateApi","watchGetActivates","watchGetStations","watchAddActivate","watchDeleteActivate","roomActivateSaga","getActivatesSuccess","getActivatesFailed","getStationsSuccess","getStationsFailed","station_id","station_name","addActivateSuccess","getRoomStructure","addActivateFailed","deleteActivateSuccess","deleteActivateFailed","GetAreasApi","GetAreaInfoApi","AddAreaApi","UpdateAreaApi","DeleteAreaApi","AddMonitorApi","UpdateMonitorApi","DeleteMonitorApi","watchGetAreas","watchGetAreaInfo","watchAddArea","watchUpdateArea","watchDeleteArea","watchAddMonitor","watchUpdateMonitor","watchDeleteMonitor","roomAreaSaga","getAreasSuccess","getAreasFailed","getAreaInfoSuccess","getAreaInfoFailed","addAreaSuccess","addAreaFailed","updateAreaSuccess","updateAreaFailed","deleteAreaSuccess","deleteAreaFailed","addMonitorSuccess","addMonitorFailed","monitor_id","updateMonitorSuccess","updateMonitorFailed","deleteMonitorSuccess","deleteMonitorFailed","rootSaga","getState","layoutSaga","roomListSaga","notificationListSaga","roomDataSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","placement","autoDismissTimeout","getElementById","getAreas","getAreaInfo","addArea","updateArea","deleteArea","addMonitor","updateMonitor","deleteMonitor","getCurrentRoomInfo","createRoom","getUserAccess","AddAccess","updateAccess","replyAccess","deleteAccess","getActivates","getStations","addActivate","deleteActivate","loginUser","registerUser","logoutUser","updateNotification","pushNotification","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","changeSidebarTheme","changeSidebarType","sidebarType","decoded","jwtDecode","currentTime","Date","now","exp","console","warn","initMenu","axios","require","constants","config","baseURL","BASE_URL","then","catch","err","BASE_URL2"],"mappings":"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","file":"static/js/main.4229b2fc.chunk.js","sourcesContent":["export const GET_USER_ACCESS = \"GET_USER_ACCESS\";\r\nexport const GET_USER_ACCESS_SUCCESS = \"GET_USER_ACCESS_SUCCESS\";\r\nexport const GET_USER_ACCESS_FAILED = \"GET_USER_ACCESS_FAILED\";\r\n\r\nexport const GET_ACCESS = \"ADD_ACCESS\";\r\nexport const GET_ACCESS_SUCCESS = \"ADD_ACCESS_SUCCESS\";\r\nexport const GET_ACCESS_FAILED = \"ADD_ACCESS_FAILED\";\r\n\r\nexport const ADD_ACCESS = \"ADD_ACCESS\";\r\nexport const ADD_ACCESS_SUCCESS = \"ADD_ACCESS_SUCCESS\";\r\nexport const ADD_ACCESS_FAILED = \"ADD_ACCESS_FAILED\";\r\n\r\nexport const UPDATE_ACCESS = \"UPDATE_ACCESS\";\r\nexport const UPDATE_ACCESS_SUCCESS = \"UPDATE_ACCESS_SUCCESS\";\r\nexport const UPDATE_ACCESS_FAILED = \"UPDATE_ACCESS_FAILED\";\r\n\r\nexport const REPLY_ACCESS = \"REPLY_ACCESS\";\r\nexport const REPLY_ACCESS_SUCCESS = \"REPLY_ACCESS_SUCCESS\";\r\nexport const REPLY_ACCESS_FAILED = \"REPLY_ACCESS_FAILED\";\r\n\r\nexport const DELETE_ACCESS = \"DELETE_ACCESS\";\r\nexport const DELETE_ACCESS_SUCCESS = \"DELETE_ACCESS_SUCCESS\";\r\nexport const DELETE_ACCESS_FAILED = \"DELETE_ACCESS_FAILED\";\r\n","// @flow\r\nimport React, { Component, Suspense } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\r\nconst VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\r\nconst HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\r\n\r\n\r\n/**\r\n * Exports the component with layout wrapped to it\r\n * @param {} WrappedComponent\r\n */\r\nconst withLayout = (WrappedComponent) => {\r\n    const HOC = class extends Component {\r\n        /**\r\n         * Returns the layout component based on different properties\r\n         */\r\n        getLayout = () => {\r\n            if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n            let layoutCls = VerticalLayout;\r\n\r\n            switch (this.props.layout.layoutType) {\r\n                case layoutConstants.LAYOUT_HORIZONTAL:\r\n                    layoutCls = HorizontalLayout;\r\n                    break;\r\n                default:\r\n                    layoutCls = VerticalLayout;\r\n                    break;\r\n            }\r\n            return layoutCls;\r\n        };\r\n\r\n        render() {\r\n            const Layout = this.getLayout();\r\n            return (\r\n                <Suspense fallback={loading()}>\r\n                    <Layout {...this.props}>\r\n                        <WrappedComponent {...this.props} />\r\n                    </Layout>\r\n                </Suspense>\r\n            );\r\n        }\r\n    };\r\n\r\n    const mapStateToProps = state => {\r\n        return {\r\n            layout: state.Layout,\r\n        };\r\n    };\r\n\r\n    return connect(\r\n        mapStateToProps,\r\n        null\r\n    )(HOC);\r\n};\r\n\r\nexport default withLayout;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Route } from \"react-router-dom\";\r\nimport * as FeatherIcon from \"react-feather\";\r\n\r\nimport { isUserAuthenticated } from \"../helpers/authUtils\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n// auth\r\nconst Login = React.lazy(() => import(\"../pages/auth/Login\"));\r\nconst Logout = React.lazy(() => import(\"../pages/auth/Logout\"));\r\nconst Register = React.lazy(() => import(\"../pages/auth/Register\"));\r\nconst ForgetPassword = React.lazy(() => import(\"../pages/auth/ForgetPassword\"));\r\nconst Confirm = React.lazy(() => import(\"../pages/auth/Confirm\"));\r\n// status\r\nconst Status = React.lazy(() => import(\"../pages/status\"));\r\n// dashboard\r\nconst Report = React.lazy(() => import(\"../pages/report\"));\r\n// config\r\nconst SensorMap = React.lazy(() =>\r\n  import(\"../pages/config/sensorMap/sensorMap\")\r\n);\r\nconst AreaConfig = React.lazy(() => import(\"../pages/config/area/areaConfig\"));\r\nconst Management = React.lazy(() =>\r\n  import(\"../pages/config/managerments/Management\")\r\n);\r\nconst WareHouseConfig = React.lazy(() =>\r\n  import(\"../pages/config/warehouseConfig/warehouseConfig\")\r\n);\r\nconst ApiService = React.lazy(() =>\r\n  import(\"../pages/config/apiService/ApiService\")\r\n);\r\n\r\n//more pages\r\nconst Store = React.lazy(() => import(\"../pages/store\"));\r\nconst Help = React.lazy(() => import(\"../pages/help\"));\r\nconst About = React.lazy(() => import(\"../pages/about\"));\r\n\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n  const currentRole = useSelector((state) => {\r\n    if (state.RoomList.currentRoom) return state.RoomList.currentRoom.role;\r\n    else return null;\r\n  });\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!isUserAuthenticated()) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/account/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n        if (currentRole != null && roles)\r\n          if (!roles.includes(currentRole))\r\n            return (\r\n              <Redirect\r\n                to={{\r\n                  pathname: \"/More/About\",\r\n                  state: { from: props.location },\r\n                }}\r\n              />\r\n            );\r\n        // authorised so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\n// root routes\r\nconst rootRoute = {\r\n  path: \"/\",\r\n  exact: true,\r\n  component: () => <Redirect to=\"/Status\" />,\r\n  route: PrivateRoute,\r\n};\r\n\r\n//status\r\nconst statusRoutes = {\r\n  path: \"/Status\",\r\n  name: \"Giám sát\",\r\n  icon: FeatherIcon.Activity,\r\n  component: Status,\r\n  roles: [\"Owner\", \"Manager\", \"Viewer\"],\r\n  route: PrivateRoute,\r\n};\r\n// dashboards\r\nconst reportRoutes = {\r\n  path: \"/Report\",\r\n  name: \"Báo cáo\",\r\n  icon: FeatherIcon.Clipboard,\r\n  component: Report,\r\n  roles: [\"Owner\", \"Manager\"],\r\n  route: PrivateRoute,\r\n};\r\n\r\n//Config\r\nconst configSensorMap = {\r\n  path: \"/Config/Sensor\",\r\n  header: \"Quản lý kho lạnh\",\r\n  name: \"Cảm biến\",\r\n  icon: FeatherIcon.Cpu,\r\n  component: SensorMap,\r\n  roles: [\"Owner\", \"Manager\"],\r\n  route: PrivateRoute,\r\n};\r\nconst configArea = {\r\n  path: \"/Config/Area\",\r\n  name: \"Khu vực\",\r\n  icon: FeatherIcon.Codepen,\r\n  component: AreaConfig,\r\n  roles: [\"Owner\", \"Manager\"],\r\n  route: PrivateRoute,\r\n};\r\nconst configManager = {\r\n  path: \"/Config/Manager\",\r\n  name: \"Người truy cập\",\r\n  icon: FeatherIcon.Users,\r\n  component: Management,\r\n  roles: [\"Owner\", \"Manager\"],\r\n  route: PrivateRoute,\r\n};\r\nconst configWarehouse = {\r\n  path: \"/Config/Info\",\r\n  name: \"Thông tin kho\",\r\n  icon: FeatherIcon.AlertCircle,\r\n  component: WareHouseConfig,\r\n  roles: [\"Owner\", \"Manager\"],\r\n  route: PrivateRoute,\r\n};\r\nconst configApi = {\r\n  path: \"/Config/Api\",\r\n  name: \"Tài khoản Api\",\r\n  icon: FeatherIcon.Rss,\r\n  component: ApiService,\r\n  roles: [\"Owner\"],\r\n  route: PrivateRoute,\r\n};\r\n\r\nconst configRoutes = [\r\n  configSensorMap,\r\n  configArea,\r\n  configManager,\r\n  configWarehouse,\r\n  configApi,\r\n];\r\n\r\n//More\r\nconst storeRoutes = {\r\n  path: \"/More/Store\",\r\n  name: \"Cửa hàng\",\r\n  header: \"Tiện ích\",\r\n  icon: FeatherIcon.ShoppingBag,\r\n  component: Store,\r\n  route: PrivateRoute,\r\n  roles: [\"User\", \"Owner\", \"Manager\", \"Viewer\"],\r\n};\r\nconst helpRoutes = {\r\n  path: \"/More/Help\",\r\n  name: \"Trợ giúp\",\r\n  icon: FeatherIcon.HelpCircle,\r\n  component: Help,\r\n  route: PrivateRoute,\r\n  roles: [\"User\", \"Owner\", \"Manager\", \"Viewer\"],\r\n};\r\nconst aboutRoutes = {\r\n  path: \"/More/About\",\r\n  name: \"Về chúng tôi\",\r\n  icon: FeatherIcon.GitHub,\r\n  component: About,\r\n  route: PrivateRoute,\r\n  roles: [\"User\", \"Owner\", \"Manager\", \"Viewer\"],\r\n};\r\nconst moreRoute = [storeRoutes, helpRoutes, aboutRoutes];\r\n// auth\r\nconst authRoutes = {\r\n  path: \"/account\",\r\n  name: \"Auth\",\r\n  children: [\r\n    {\r\n      path: \"/account/login\",\r\n      name: \"Login\",\r\n      component: Login,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/logout\",\r\n      name: \"Logout\",\r\n      component: Logout,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/register\",\r\n      name: \"Register\",\r\n      component: Register,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/confirm\",\r\n      name: \"Confirm\",\r\n      component: Confirm,\r\n      route: Route,\r\n    },\r\n    {\r\n      path: \"/account/forget-password\",\r\n      name: \"Forget Password\",\r\n      component: ForgetPassword,\r\n      route: Route,\r\n    },\r\n  ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = (routes) => {\r\n  let flatRoutes = [];\r\n\r\n  routes = routes || [];\r\n  routes.forEach((item) => {\r\n    flatRoutes.push(item);\r\n\r\n    if (typeof item.children !== \"undefined\") {\r\n      flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n    }\r\n  });\r\n  return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [\r\n  rootRoute,\r\n  statusRoutes,\r\n  reportRoutes,\r\n  ...configRoutes,\r\n  ...moreRoute,\r\n  authRoutes,\r\n];\r\n\r\nconst authProtectedRoutes = [\r\n  statusRoutes,\r\n  reportRoutes,\r\n  ...configRoutes,\r\n  ...moreRoute,\r\n];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\n//import { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n//import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n//import './assets/scss/theme-rtl.scss';\r\n\r\n// configure fake backend\r\n//configureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n    render() {\r\n        return <Routes></Routes>;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, errorLogin: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, errorLogin: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, errorRegister: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, errorRegister: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, errorFogot: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, errorFogot: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","import { Cookies } from 'react-cookie';\r\nconst setRoomCookieDefault = (room) => {\r\n    let cookies = new Cookies();\r\n    if (room) {\r\n        cookies.set('currentRoom', JSON.stringify(room), { path: '/' });\r\n    } else {\r\n        cookies.remove('currentRoom', { path: '/' });\r\n    }\r\n};\r\nconst getRoomCookieDefault = ()=>{\r\n    const cookies = new Cookies();\r\n    const room = cookies.get('currentRoom');\r\n    let roomDefault= room ? (typeof room == 'object' ? room : JSON.parse(room)) : null;\r\n    return roomDefault;\r\n}\r\nexport { setRoomCookieDefault, getRoomCookieDefault };","import { getRoomCookieDefault, setRoomCookieDefault } from \"helpers/roomUtils\";\r\nimport { setCurrentRoom } from \"./actions\";\r\nimport {\r\n  GET_ROOM_LIST,\r\n  GET_ROOM_LIST_SUCCESS,\r\n  GET_ROOM_LIST_FAILED,\r\n  SET_CURR_ROOM,\r\n  CREATE_ROOM,\r\n  CREATE_ROOM_SUCCESS,\r\n  CREATE_ROOM_FAILED,\r\n  UPDATE_ROOM,\r\n  UPDATE_ROOM_SUCCESS,\r\n  UPDATE_ROOM_FAILED,\r\n  DELETE_ROOM,\r\n  DELETE_ROOM_SUCCESS,\r\n  DELETE_ROOM_FAILED,\r\n  GET_CURR_ROOM_INFO,\r\n  GET_CURR_ROOM_INFO_SUCCESS,\r\n  GET_CURR_ROOM_INFO_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  loading: false,\r\n  error: null,\r\n  myRoom: [],\r\n  sharedRoom: [],\r\n  currentRoom: getRoomCookieDefault(),\r\n  currentRoomInfo: null,\r\n};\r\n\r\nconst RoomList = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ROOM_LIST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case GET_ROOM_LIST_SUCCESS:\r\n      const rooms = action.payload.accesses;\r\n      const newMyRoom = rooms.filter((e) => e.role === \"Owner\");\r\n      const newSharedRoom = rooms.filter((e) => e.role != \"Owner\");\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        myRoom: newMyRoom,\r\n        sharedRoom: newSharedRoom,\r\n        currentRoom: getRoomCookieDefault()\r\n          ? getRoomCookieDefault()\r\n          : newMyRoom[0]\r\n          ? newMyRoom[0]\r\n          : newSharedRoom[0]\r\n          ? newSharedRoom[0]\r\n          : {\r\n              role: \"Viewer\",\r\n              room: {\r\n                _id: undefined,\r\n                name: \"Chưa có kho lạnh nào\",\r\n              },\r\n            },\r\n      };\r\n\r\n    case GET_ROOM_LIST_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        myRoom: [],\r\n        sharedRoom: [],\r\n        error: action.payload.error,\r\n        currentRoom: null,\r\n      };\r\n\r\n    case SET_CURR_ROOM:\r\n      setRoomCookieDefault(action.payload.room);\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        currentRoom: action.payload.room,\r\n      };\r\n    case GET_CURR_ROOM_INFO:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        currentRoomInfo: null,\r\n      };\r\n    case GET_CURR_ROOM_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRoomInfo: action.payload.room,\r\n      };\r\n    case GET_CURR_ROOM_INFO_FAILED:\r\n      setRoomCookieDefault(null);\r\n      return {\r\n        ...state,\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        currentRoomInfo: null,\r\n      };\r\n\r\n    case CREATE_ROOM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case CREATE_ROOM_SUCCESS:\r\n      let newRoom = {\r\n        role: \"Owner\",\r\n        room: {\r\n          _id: action.payload.room._id,\r\n          name: action.payload.room.name,\r\n        },\r\n      };\r\n      let newListMyRoom = [...state.myRoom];\r\n      newListMyRoom.push(newRoom);\r\n      setRoomCookieDefault(newRoom);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        myRoom: newListMyRoom,\r\n        currentRoom: newRoom,\r\n      };\r\n    case CREATE_ROOM_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case UPDATE_ROOM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case UPDATE_ROOM_SUCCESS:\r\n      let tempUpdateRoom = {\r\n        role: state.currentRoom.role,\r\n        room: {\r\n          ...state.currentRoom.room,\r\n          name: action.payload.room.name,\r\n        },\r\n      };\r\n      let newSharedRoomU = null;\r\n      let newMyRoomU = null;\r\n      if (tempUpdateRoom.role === \"Owner\") {\r\n        newMyRoomU = [...state.myRoom];\r\n        newMyRoomU = newMyRoomU.map((it) => {\r\n          return it.room._id === tempUpdateRoom.room._id ? tempUpdateRoom : it;\r\n        });\r\n      } else {\r\n        newSharedRoomU = [...state.sharedRoom];\r\n        newSharedRoomU = newSharedRoomU.map((it) => {\r\n          return it.room._id === tempUpdateRoom.room._id ? tempUpdateRoom : it;\r\n        });\r\n      }\r\n      setRoomCookieDefault(tempUpdateRoom);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentRoomInfo: action.payload.room,\r\n        currentRoom: tempUpdateRoom,\r\n        myRoom: newMyRoomU ? newMyRoomU : state.myRoom,\r\n        sharedRoom: newSharedRoomU ? newSharedRoomU : state.sharedRoom,\r\n      };\r\n    case UPDATE_ROOM_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case DELETE_ROOM:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_ROOM_SUCCESS:\r\n      let tempShareRoom = [...state.sharedRoom].filter(\r\n        (r) => r.room._id !== action.payload.room_id\r\n      );\r\n      let tempMyRoom = [...state.myRoom].filter(\r\n        (r) => r.room._id !== action.payload.room_id\r\n      );\r\n      let tempCurrent = tempMyRoom[0]\r\n        ? tempMyRoom[0]\r\n        : tempShareRoom[0]\r\n        ? tempShareRoom[0]\r\n        : {\r\n            role: \"Viewer\",\r\n            room: {\r\n              _id: undefined,\r\n              name: \"Chưa có kho lạnh nào\",\r\n            },\r\n          };\r\n      setRoomCookieDefault(null);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        sharedRoom: tempShareRoom,\r\n        myRoom: tempMyRoom,\r\n        currentRoom: tempCurrent,\r\n        error: null,\r\n      };\r\n    case DELETE_ROOM_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default RoomList;\r\n","import {\r\n    GET_NOTIFICATION_LIST,\r\n    GET_NOTIFICATION_LIST_SUCCESS,\r\n    GET_NOTIFICATION_LIST_FAILED,\r\n\r\n    DELETE_NOTIFICATION,\r\n    DELETE_NOTIFICATION_SUCCESS,\r\n    DELETE_NOTIFICATION_FAILED,\r\n\r\n    DELETE_ALL_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    DELETE_ALL_NOTIFICATION_FAILED,\r\n    \r\n    UPDATE_NOTIFICATION,\r\n    PUSH_NOTIFICATION\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n}\r\nconst Notification = (state = INIT_STATE, action) => {\r\n    switch (action.type){\r\n        case GET_NOTIFICATION_LIST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case GET_NOTIFICATION_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: action.payload.list,\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case GET_NOTIFICATION_LIST_FAILED:\r\n            return {\r\n                ...state,\r\n                list:[],\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case DELETE_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case DELETE_NOTIFICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list: [...state.list].filter((noti) =>(noti._id != action.payload.notification_id)),\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case DELETE_NOTIFICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n        case DELETE_ALL_NOTIFICATION:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n        case DELETE_ALL_NOTIFICATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                list:[],\r\n                loading: false,\r\n                error: null\r\n            }\r\n        case DELETE_ALL_NOTIFICATION_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload.error\r\n            }\r\n\r\n\r\n        case UPDATE_NOTIFICATION:\r\n            const newState = {...state}\r\n            const list = newState.list;\r\n            if (!list) return newState;\r\n            const targetIndex = list.findIndex(e => (e._id === action.payload.id));\r\n            if (targetIndex!=-1){\r\n                newState.list[targetIndex] = {\r\n                    ...newState.list[targetIndex],\r\n                    ...action.payload.data\r\n                }\r\n            } \r\n            return newState;\r\n        \r\n        case PUSH_NOTIFICATION:\r\n            let newList = [...state.list];\r\n            newList.unshift(action.payload.notification)\r\n            return {\r\n                ...state,list: newList\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default Notification;","import {\r\n    GET_AREA_DATA,\r\n    GET_AREA_DATA_SUCCESS,\r\n    GET_AREA_DATA_FAILED,\r\n\r\n    GET_CURRENT_DATA,\r\n    GET_CURRENT_DATA_SUCCESS,\r\n    GET_CURRENT_DATA_FAILED,\r\n\r\n    GET_SENSOR_DATA,\r\n    GET_SENSOR_DATA_SUCCESS,\r\n    GET_SENSOR_DATA_FAILED,\r\n\r\n    GET_CUBE_DATA,\r\n    GET_CUBE_DATA_SUCCESS,\r\n    GET_CUBE_DATA_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    areaData:null,\r\n    sensorData:null,\r\n    cubeData:null,\r\n    currentData:null,\r\n    loading:false,\r\n    error:null,\r\n};\r\nconst RoomData = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_AREA_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                areaData:null,\r\n            }\r\n        case GET_AREA_DATA_SUCCESS:\r\n         \r\n            let cr = (state.areaData)?[...state.areaData]: new Array();\r\n             cr.push(action.payload.data);\r\n            if(cr.length >10){\r\n                cr.shift()\r\n            } \r\n            return {\r\n                ...state,\r\n                areaData: cr,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_AREA_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                error: action.payload.error,\r\n                areaData:null,\r\n            }\r\n        case GET_CURRENT_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                cubeData:null\r\n            }\r\n        case GET_CURRENT_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_CURRENT_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                currentData:null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        case GET_SENSOR_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n            }\r\n        case GET_SENSOR_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                sensorData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_SENSOR_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                sensorData: null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        case GET_CUBE_DATA:\r\n            return {\r\n                ...state,\r\n                loading:true,\r\n                error: null,\r\n                cubeData:null\r\n            }\r\n        case GET_CUBE_DATA_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cubeData: action.payload.data,\r\n                loading: false,\r\n                error: null,\r\n            }\r\n        case GET_CUBE_DATA_FAILED:\r\n            return {\r\n                ...state,\r\n                cubeData: null,\r\n                loading:false,\r\n                error: action.payload.error,\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\nexport default RoomData;","import {\r\n    GET_CURR_ROOM_SENSOR_MAP,\r\n    GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n    GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n\r\n    ADD_SENSOR,\r\n    ADD_SENSOR_SUCCESS,\r\n    ADD_SENSOR_FAILED,\r\n\r\n    UPDATE_SENSOR,\r\n    UPDATE_SENSOR_SUCCESS,\r\n    UPDATE_SENSOR_FAILED,\r\n\r\n    DELETE_SENSOR,\r\n    DELETE_SENSOR_SUCCESS,\r\n    DELETE_SENSOR_FAILED,\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    loading: false,\r\n    error:null,\r\n    structure:null\r\n};\r\n\r\nconst RoomStructrure = (state = INIT_STATE, action) =>{\r\n    switch (action.type) {\r\n        case GET_CURR_ROOM_SENSOR_MAP:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n            structure:null\r\n        }\r\n        case GET_CURR_ROOM_SENSOR_MAP_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case GET_CURR_ROOM_SENSOR_MAP_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        case ADD_SENSOR:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n        }\r\n        case ADD_SENSOR_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case ADD_SENSOR_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        case UPDATE_SENSOR:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n        }\r\n        case UPDATE_SENSOR_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case UPDATE_SENSOR_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        case DELETE_SENSOR:\r\n        return{\r\n            ...state,\r\n            loading: true,\r\n            error:null,\r\n        }\r\n        case DELETE_SENSOR_SUCCESS:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:null,\r\n            structure: (action.payload.data.map.map) ? action.payload.data :null\r\n        }\r\n        case DELETE_SENSOR_FAILED:\r\n        return{\r\n            ...state,\r\n            loading: false,\r\n            error:action.payload.error,\r\n            structure: null\r\n        }\r\n        default:\r\n            return {...state}\r\n    }\r\n}\r\nexport default RoomStructrure;","import {\r\n  GET_USER_ACCESS,\r\n  GET_USER_ACCESS_SUCCESS,\r\n  ADD_ACCESS,\r\n  ADD_ACCESS_SUCCESS,\r\n  ADD_ACCESS_FAILED,\r\n  UPDATE_ACCESS,\r\n  UPDATE_ACCESS_SUCCESS,\r\n  UPDATE_ACCESS_FAILED,\r\n  REPLY_ACCESS,\r\n  REPLY_ACCESS_SUCCESS,\r\n  REPLY_ACCESS_FAILED,\r\n  DELETE_ACCESS,\r\n  DELETE_ACCESS_SUCCESS,\r\n  DELETE_ACCESS_FAILED,\r\n  GET_USER_ACCESS_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  loading: false,\r\n  error: null,\r\n  accesses: [],\r\n};\r\n\r\nconst RoomAccess = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_USER_ACCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        accesses: [],\r\n      };\r\n    case GET_USER_ACCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        accesses: action.payload.accesses,\r\n      };\r\n    case GET_USER_ACCESS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        accesses: [],\r\n      };\r\n    case ADD_ACCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ADD_ACCESS_SUCCESS:\r\n      let newAccesses = [...state.accesses];\r\n      newAccesses.push(action.payload.access);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        accesses: newAccesses,\r\n      };\r\n    case ADD_ACCESS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case UPDATE_ACCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case UPDATE_ACCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        accesses: [...state.accesses].map((ac) =>\r\n          ac._id === action.payload.access._id ? action.payload.access : ac\r\n        ),\r\n      };\r\n    case UPDATE_ACCESS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case REPLY_ACCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case REPLY_ACCESS_SUCCESS:\r\n      let newAccessesReply = [...state.accesses];\r\n      newAccessesReply.push(action.payload.access);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        accesses: newAccessesReply,\r\n      };\r\n    case REPLY_ACCESS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case DELETE_ACCESS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_ACCESS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        accesses: [...state.accesses].filter(\r\n          (ac) => ac._id != action.payload.access_id\r\n        ),\r\n      };\r\n    case DELETE_ACCESS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default RoomAccess;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nconst f = (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\nexport default f;\r\n","import f from \"redux/appMenu/utils\";\r\nimport {\r\n  GET_ACTIVATES,\r\n  GET_ACTIVATES_SUCCESS,\r\n  GET_ACTIVATES_FAILED,\r\n  GET_STATIONS,\r\n  GET_STATIONS_SUCCESS,\r\n  GET_STATIONS_FAILED,\r\n  ADD_ACTIVATE,\r\n  ADD_ACTIVATE_SUCCESS,\r\n  ADD_ACTIVATE_FAILED,\r\n  DELETE_ACTIVATE,\r\n  DELETE_ACTIVATE_SUCCESS,\r\n  DELETE_ACTIVATE_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  loading: false,\r\n  error: null,\r\n  activates: [],\r\n  stations: null,\r\n};\r\n\r\nconst RoomActivate = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_ACTIVATES:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        activates: [],\r\n      };\r\n    case GET_ACTIVATES_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        activates: [],\r\n      };\r\n    case GET_ACTIVATES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        activates: action.payload.activates,\r\n      };\r\n\r\n    case ADD_ACTIVATE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n\r\n    case ADD_ACTIVATE_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case ADD_ACTIVATE_SUCCESS:\r\n      let newActivates = [...state.activates];\r\n      newActivates.push(action.payload.activate);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        activates: newActivates,\r\n        stations: null,\r\n      };\r\n\r\n    case GET_STATIONS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        stations: null,\r\n      };\r\n    case GET_STATIONS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        stations: null,\r\n      };\r\n    case GET_STATIONS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        stations: action.payload.stations,\r\n      };\r\n\r\n    case DELETE_ACTIVATE:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_ACTIVATE_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    case DELETE_ACTIVATE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        activates: [...state.activates].filter(\r\n          (at) => at._id != action.payload.activate_id\r\n        ),\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default RoomActivate;\r\n","import {\r\n  GET_AREA_INFO,\r\n  GET_AREA_INFO_SUCCESS,\r\n  GET_AREA_INFO_FAILED,\r\n  GET_AREAS,\r\n  GET_AREAS_SUCCESS,\r\n  GET_AREAS_FAILED,\r\n  ADD_AREA,\r\n  ADD_AREA_SUCCESS,\r\n  ADD_AREA_FAILED,\r\n  ADD_MONITOR,\r\n  ADD_MONITOR_SUCCESS,\r\n  ADD_MONITOR_FAILED,\r\n  UPDATE_AREA,\r\n  UPDATE_AREA_SUCCESS,\r\n  UPDATE_AREA_FAILED,\r\n  UPDATE_MONITOR,\r\n  UPDATE_MONITOR_SUCCESS,\r\n  UPDATE_MONITOR_FAILED,\r\n  DELETE_AREA,\r\n  DELETE_AREA_SUCCESS,\r\n  DELETE_AREA_FAILED,\r\n  DELETE_MONITOR,\r\n  DELETE_MONITOR_SUCCESS,\r\n  DELETE_MONITOR_FAILED,\r\n} from \"./constants\";\r\n\r\nconst INIT_STATE = {\r\n  loading: false,\r\n  error: null,\r\n  areas: [],\r\n  currentArea: null,\r\n};\r\n\r\nconst RoomArea = (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_AREAS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n        currentArea: null,\r\n      };\r\n\r\n    case GET_AREAS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: action.payload.areas,\r\n      };\r\n\r\n    case GET_AREAS_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        areas: [],\r\n      };\r\n\r\n    case GET_AREA_INFO:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case GET_AREA_INFO_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: action.payload.area,\r\n      };\r\n    case GET_AREA_INFO_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n        currentArea: null,\r\n      };\r\n\r\n    case ADD_AREA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ADD_AREA_SUCCESS:\r\n      let newAreas = [...state.areas];\r\n      newAreas.push({\r\n        _id: action.payload.area._id,\r\n        name: action.payload.area.name,\r\n      });\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: newAreas,\r\n        currentArea: action.payload.area,\r\n      };\r\n    case ADD_AREA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case UPDATE_AREA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case UPDATE_AREA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: [...state.areas].map((area) =>\r\n          area._id === action.payload.area._id\r\n            ? {\r\n                _id: area._id,\r\n                name: action.payload.area.name,\r\n              }\r\n            : area\r\n        ),\r\n        currentArea: action.payload.area,\r\n      };\r\n    case UPDATE_AREA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case DELETE_AREA:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_AREA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        areas: [...state.areas].filter(\r\n          (area) => area._id != action.payload.area_id\r\n        ),\r\n        currentArea: null,\r\n      };\r\n    case DELETE_AREA_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case ADD_MONITOR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case ADD_MONITOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: {\r\n          ...state.currentArea,\r\n          monitors: action.payload.monitors,\r\n        },\r\n      };\r\n    case ADD_MONITOR_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case UPDATE_MONITOR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case UPDATE_MONITOR_SUCCESS:\r\n      let newMonitors = [...state.currentArea.monitors];\r\n      newMonitors = newMonitors.map((monitor) =>\r\n        monitor._id === action.payload.monitor._id\r\n          ? action.payload.monitor\r\n          : monitor\r\n      );\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: {\r\n          ...state.currentArea,\r\n          monitors: newMonitors,\r\n        },\r\n      };\r\n    case UPDATE_MONITOR_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n\r\n    case DELETE_MONITOR:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    case DELETE_MONITOR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n        currentArea: {\r\n          ...state.currentArea,\r\n          monitors: action.payload.monitors,\r\n        },\r\n      };\r\n    case DELETE_MONITOR_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error,\r\n      };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\nexport default RoomArea;\r\n","import { combineReducers } from \"redux\";\r\nimport Layout from \"./layout/reducers\";\r\nimport Auth from \"./auth/reducers\";\r\nimport AppMenu from \"./appMenu/reducers\";\r\n\r\nimport RoomList from \"./roomList/reducers\";\r\nimport Notification from \"./notification/reducers\";\r\nimport RoomData from \"./roomData/reducers\";\r\nimport RoomStructrure from \"./roomStructrure/reducers\";\r\nimport RoomAccess from \"./roomAccess/reducers\";\r\nimport RoomActivate from \"./roomActivate/reducers\";\r\nimport RoomArea from \"./roomArea/reducers\";\r\n\r\nexport default combineReducers({\r\n  Auth,\r\n  AppMenu,\r\n  Layout,\r\n  RoomList,\r\n  RoomData,\r\n  Notification,\r\n  RoomStructrure,\r\n  RoomAccess,\r\n  RoomActivate,\r\n  RoomArea,\r\n});\r\n","// @flow\r\nimport { Cookies } from \"react-cookie\";\r\nimport { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport { requestApi } from \"helpers/api\";\r\n\r\nimport {\r\n  LOGIN_USER,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  FORGET_PASSWORD,\r\n  LOGIN_USER_SUCCESS,\r\n} from \"./constants\";\r\n\r\nimport {\r\n  loginUserSuccess,\r\n  loginUserFailed,\r\n  registerUserSuccess,\r\n  registerUserFailed,\r\n  forgetPasswordSuccess,\r\n  forgetPasswordFailed,\r\n  setCurrentRoom,\r\n  getCurrentRoomInfoFailed,\r\n} from \"redux/actions\";\r\nimport { getNotificationListFailed } from \"redux/notification/actions\";\r\nimport {\r\n  getAreaDataFailed,\r\n  getCubeDataFailed,\r\n  getCurrentDataFailed,\r\n  getSensorDataFailed,\r\n} from \"redux/roomData/actions\";\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = (user) => {\r\n  let cookies = new Cookies();\r\n  if (user) {\r\n    cookies.set(\"user\", JSON.stringify(user), { path: \"/\" });\r\n  } else {\r\n    cookies.remove(\"user\", { path: \"/\" });\r\n  }\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data: { username, password },\r\n    url: \"api/auth/signin\",\r\n  };\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      setSession(response.result);\r\n      yield put(loginUserSuccess(response.result));\r\n\r\n      yield put(setCurrentRoom(null));\r\n      yield put(getNotificationListFailed(null));\r\n      yield put(getAreaDataFailed(null));\r\n      yield put(getCurrentDataFailed(null));\r\n      yield put(getSensorDataFailed(null));\r\n      yield put(getCubeDataFailed(null));\r\n      yield put(getCurrentRoomInfoFailed(null));\r\n    } else {\r\n      setSession(null);\r\n      yield put(loginUserFailed(response.result)); //message\r\n    }\r\n  } catch (error) {\r\n    setSession(null);\r\n    yield put(loginUserFailed(error)); //message\r\n  }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n  try {\r\n    setSession(null);\r\n    yield put(setCurrentRoom(null));\r\n    yield put(getNotificationListFailed(null));\r\n    yield put(getAreaDataFailed(null));\r\n    yield put(getCurrentDataFailed(null));\r\n    yield put(getSensorDataFailed(null));\r\n    yield put(getCubeDataFailed(null));\r\n    yield put(getCurrentRoomInfoFailed(null));\r\n    yield call(() => {\r\n      history.push(\"/account/login\");\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { username, email, password } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data: { username, password, email },\r\n    url: \"api/auth/signup\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(registerUserSuccess(response.result));\r\n    } else {\r\n      yield put(registerUserFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(registerUserFailed(\"Erro\"));\r\n  }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { email, username } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    data: { email, username },\r\n    url: \"api/user/forgotPassword\",\r\n  };\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(forgetPasswordSuccess(response.result));\r\n    } else {\r\n      yield put(forgetPasswordFailed(response.result)); //message\r\n    }\r\n  } catch (error) {\r\n    yield put(forgetPasswordFailed(error)); //message\r\n  }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n  yield takeEvery(LOGIN_USER, login);\r\n}\r\nexport function* watchLogoutUser() {\r\n  yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n  yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n  yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n  yield all([\r\n    fork(watchLoginUser),\r\n    fork(watchLogoutUser),\r\n    fork(watchRegisterUser),\r\n    fork(watchForgetPassword),\r\n  ]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\nimport { requestApi } from 'helpers/api';\r\nimport { CREATE_ROOM, CREATE_ROOM_SUCCESS, DELETE_ROOM, GET_CURR_ROOM_INFO, GET_ROOM_LIST, SET_CURR_ROOM, UPDATE_ROOM } from './constants';\r\n\r\nimport {\r\n    getRoomListSuccess,\r\n    getRoomListFailed,\r\n    createRoomSuccess,\r\n    createRoomFailed,\r\n    updateRoomFailed,\r\n    updateRoomSuccess,\r\n    deleteRoomSuccess,\r\n    deleteRoomFailed,\r\n    getCurrentRoomInfoSuccess,\r\n    getCurrentRoomInfoFailed\r\n\r\n} from './actions';\r\n\r\n\r\nfunction* getRoomList({payload:{user}}){\r\n    try{\r\n        const response = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url: 'api/room/access/all'\r\n        });\r\n        if (response.status==\"success\"){\r\n            yield put(getRoomListSuccess(response.result.accesses));\r\n        } else {\r\n            yield put(getRoomListFailed(response.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getRoomListFailed(error));\r\n    }\r\n}\r\n\r\nfunction* getRoomInfo({payload:{user,room_id}}){\r\n    try{\r\n        const response = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url: 'api/room/',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (response.status==\"success\"){\r\n            yield put(getCurrentRoomInfoSuccess(response.result.room));\r\n        } else {\r\n            yield put(getCurrentRoomInfoFailed(response.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getCurrentRoomInfoFailed(error));\r\n    }\r\n}\r\n\r\n\r\nfunction* newRoom({ payload: {user,room} }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n         },\r\n        data:room,\r\n        url : 'api/room/create'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(createRoomSuccess(response.result.room));\r\n        } else {\r\n            yield put(createRoomFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(createRoomFailed(error));\r\n    }\r\n}\r\n\r\nfunction* updateRoom({ payload: {user,room_id,room_info} }) {\r\n    const options = {\r\n        method: 'post',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n         },\r\n        data:{room_id: room_id,...room_info},\r\n        url : 'api/room/edit'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(updateRoomSuccess(response.result.room));\r\n        } else {\r\n            yield put(updateRoomFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(updateRoomFailed(error));\r\n    }\r\n}\r\nfunction* deleteRoom({ payload: {user,room_id} }) {\r\n    const options = {\r\n        method: 'delete',\r\n        headers: { \r\n            'Content-Type': 'application/json',\r\n            'x-access-token': user.accessToken\r\n         },\r\n        data:{room_id},\r\n        url : 'api/room/'\r\n    };\r\n\r\n    try {\r\n        const response = yield call(requestApi,options);\r\n        if (response.status==='success') {\r\n            yield put(deleteRoomSuccess(room_id));\r\n        } else {\r\n            yield put(deleteRoomFailed(response.result));\r\n        }\r\n    } catch (error) {\r\n        yield put(deleteRoomFailed(error));\r\n    }\r\n}\r\n\r\n\r\nfunction * watchGetRoomList(){\r\n    yield takeEvery(GET_ROOM_LIST, getRoomList);\r\n}\r\n\r\nfunction * watchGetCurrentRoomInfo(){\r\n    yield takeEvery(GET_CURR_ROOM_INFO, getRoomInfo);\r\n}\r\n\r\nfunction * watchCreateRoom(){\r\n    yield takeEvery(CREATE_ROOM, newRoom);\r\n}\r\nfunction * watchUpdateRoom(){\r\n    yield takeEvery(UPDATE_ROOM, updateRoom);\r\n}\r\nfunction * watchDeleteRooms(){\r\n    yield takeEvery(DELETE_ROOM, deleteRoom);\r\n}\r\n\r\nfunction* RoomListSaga(){\r\n    yield all([\r\n        fork(watchGetRoomList),\r\n        fork(watchCreateRoom),\r\n        fork(watchUpdateRoom),\r\n        fork(watchDeleteRooms),\r\n        fork(watchGetCurrentRoomInfo),\r\n    ])\r\n}\r\n\r\nexport default RoomListSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\nimport {requestApi} from 'helpers/api';\r\nimport {\r\n    GET_NOTIFICATION_LIST,\r\n    DELETE_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION,\r\n} from './constants';\r\n\r\nimport {\r\n    getNotificationListSuccess,\r\n    getNotificationListFailed,\r\n    deleteNotificationSuccess,\r\n    deleteNotificationFailed,\r\n    deleteAllNotificationSuccess,\r\n    deleteAllNotificationFailed,\r\n} from './actions';\r\n\r\nfunction * getNotificationList({payload: {user}}){\r\n    const res = yield call (requestApi,{\r\n        method: 'get',\r\n        headers: {\r\n            'x-access-token': user.accessToken\r\n        },\r\n        url: 'api/notification/all'\r\n    });\r\n    if (res.status === 'success'){\r\n        yield put(getNotificationListSuccess(res.result.notifications));\r\n    } else {\r\n        yield put(getNotificationListFailed(res.result));\r\n    }\r\n}\r\n\r\nfunction * deleteNotification({payload: {user,notification_id}}){\r\n\r\n    const res = yield call (requestApi,{\r\n        method: 'delete',\r\n        headers: {\r\n            'x-access-token':user.accessToken\r\n        },\r\n        url: 'api/notification',\r\n        params: {\r\n            notification_id\r\n        }\r\n    })\r\n    if (res.status === 'success'){\r\n        yield put(deleteNotificationSuccess(notification_id));\r\n    } else {\r\n        yield put(deleteNotificationFailed(res.result));\r\n    }\r\n}\r\n\r\nfunction * deleteAllNotification({payload: {user}}){\r\n    const res = yield call (requestApi,{\r\n        method: 'delete',\r\n        headers: {\r\n            'x-access-token': user.accessToken\r\n        },\r\n        url: 'api/notification/all'\r\n    })\r\n    if (res.status === 'success'){\r\n       yield  put(deleteAllNotificationSuccess(res.result));\r\n    } else {\r\n        yield put(deleteAllNotificationFailed(res.result));\r\n    }\r\n}\r\n\r\nfunction * watchGetNotification(){\r\n    yield takeEvery(GET_NOTIFICATION_LIST, getNotificationList)\r\n}\r\nfunction * watchDeleteNotification(){\r\n    yield takeEvery(DELETE_NOTIFICATION, deleteNotification)\r\n}\r\nfunction * watchDeleteAllNotification(){\r\n    yield takeEvery(DELETE_ALL_NOTIFICATION, deleteAllNotification)\r\n}\r\n\r\nfunction * Notification(){\r\n    yield all([\r\n        fork(watchGetNotification),\r\n        fork(watchDeleteNotification),\r\n        fork(watchDeleteAllNotification),\r\n    ])\r\n}\r\n\r\nexport default Notification;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    GET_AREA_DATA,\r\n    GET_CUBE_DATA,\r\n    GET_CURRENT_DATA,\r\n    GET_SENSOR_DATA,\r\n} from './constants';\r\n\r\nimport {\r\n    getAreaDataSuccess,\r\n    getAreaDataFailed,\r\n    getCurrentDataSuccess,\r\n    getCurrentDataFailed,\r\n    getSensorDataSuccess,\r\n    getSensorDataFailed,\r\n    getCubeDataSuccess,\r\n    getCubeDataFailed,\r\n} from './actions';\r\n\r\nimport {requestApi} from 'helpers/api'\r\n\r\nfunction* getAreaData({payload: {user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/area',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getAreaDataSuccess(res.result))\r\n        } else {\r\n            yield put(getAreaDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getAreaDataFailed(error))\r\n    }\r\n}\r\n\r\nfunction* getCurrentData({payload:{user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/current',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getCurrentDataSuccess(res.result))\r\n        } else {\r\n            yield put(getCurrentDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getCurrentDataFailed(error))\r\n    }\r\n}\r\nfunction* getSensorData({payload: {user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/sensor',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getSensorDataSuccess(res.result))\r\n        } else {\r\n            yield put(getSensorDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getSensorDataFailed(error))\r\n    }\r\n}\r\n\r\nfunction* getCubeData({payload: {user, room_id}}){\r\n    try{\r\n        const res = yield call(requestApi,{\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken\r\n            },\r\n            url: 'api/room/data/getCubeData',\r\n            params: {\r\n                room_id\r\n            }\r\n        });\r\n        if (res.status === \"success\"){\r\n            yield put(getCubeDataSuccess(res.result))\r\n        } else {\r\n            yield put(getCubeDataFailed(res.result))\r\n        }\r\n    } catch (error){\r\n        yield put(getCubeDataFailed(error))\r\n    }\r\n}\r\n\r\n\r\nfunction * watchGetAreaData(){\r\n    yield takeEvery(GET_AREA_DATA, getAreaData);\r\n}\r\n\r\nfunction * watchGetCurrentData(){\r\n    yield takeEvery(GET_CURRENT_DATA, getCurrentData);\r\n}\r\n\r\nfunction * watchGetSensorData(){\r\n    yield takeEvery(GET_SENSOR_DATA, getSensorData);\r\n}\r\n\r\nfunction * watchGetCubeData(){\r\n    yield takeEvery(GET_CUBE_DATA, getCubeData);\r\n}\r\n\r\nfunction* RoomDataSaga(){\r\n    yield all([\r\n        fork(watchGetAreaData),\r\n        fork(watchGetCurrentData),\r\n        fork(watchGetSensorData),\r\n        fork(watchGetCubeData),\r\n    ])\r\n}\r\n\r\nexport default RoomDataSaga;","import { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    ADD_SENSOR,\r\n    GET_CURR_ROOM_SENSOR_MAP,\r\n    UPDATE_SENSOR,\r\n    DELETE_SENSOR\r\n} from './constants';\r\n\r\nimport { addSensorFailed, addSensorSuccess, deleteSensorFailed, deleteSensorSuccess, getRoomStructureFailed, getRoomStructureSuccess, updateSensorFailed, updateSensorSuccess } from './actions';\r\n\r\nimport {requestApi} from 'helpers/api';\r\n\r\n\r\nfunction * getCurrentRoomSensorMap({payload: {room_id, user}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'get',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/',\r\n            params:{room_id}\r\n        });\r\n        if (res.status==='success'){\r\n            yield put(getRoomStructureSuccess(res.result.structure));\r\n        } else {\r\n            yield put(getRoomStructureFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(getRoomStructureFailed(error))\r\n    }\r\n}\r\n\r\nfunction * updateSensor({payload: {user,room_id,sensor_id,location}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/sensor/edit',\r\n            data:{room_id,sensor_id,location:location}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(updateSensorSuccess(res.result.structure));\r\n        } else {\r\n            yield put(updateSensorFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(updateSensorFailed(error))\r\n    }\r\n}\r\n\r\nfunction * addSensor({payload: {user,room_id,sensor_id,location}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/sensor/add',\r\n            data:{room_id,sensor_id,location:location}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(addSensorSuccess(res.result.structure));\r\n        } else {\r\n            yield put(addSensorFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(addSensorFailed(error))\r\n    }\r\n}\r\n\r\nfunction * deleteSensor({payload: {user,room_id,sensor_id}}){\r\n    try{\r\n        const res = yield call(requestApi, {\r\n            method: 'post',\r\n            headers: {\r\n                'x-access-token': user.accessToken,\r\n            },\r\n            url:'api/room/structure/sensor/delete',\r\n            data:{room_id,sensor_id}\r\n        });\r\n\r\n        if (res.status==='success'){\r\n            yield put(deleteSensorSuccess(res.result.structure));\r\n        } else {\r\n            yield put(deleteSensorFailed(res.result));\r\n        }\r\n    } catch (error){\r\n        yield put(deleteSensorFailed(error))\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction * watchGetCurrentRoomSensorMap(){\r\n    yield takeEvery(GET_CURR_ROOM_SENSOR_MAP, getCurrentRoomSensorMap);\r\n}\r\n\r\nfunction * watchUpdateSensor(){\r\n    yield takeEvery(UPDATE_SENSOR, updateSensor);\r\n}\r\n\r\nfunction * watchAddeSensor(){\r\n    yield takeEvery(ADD_SENSOR, addSensor);\r\n}\r\n\r\nfunction * watchDeleteSensor(){\r\n    yield takeEvery(DELETE_SENSOR, deleteSensor);\r\n}\r\n\r\nfunction* roomStructrureSaga(){\r\n    yield all([\r\n\r\n        fork(watchGetCurrentRoomSensorMap),\r\n        fork(watchUpdateSensor),\r\n        fork(watchAddeSensor),\r\n        fork(watchDeleteSensor),\r\n       \r\n    ])\r\n}\r\n\r\nexport default roomStructrureSaga;","import { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_ACCESS,\r\n  DELETE_ACCESS,\r\n  GET_USER_ACCESS,\r\n  REPLY_ACCESS,\r\n  UPDATE_ACCESS,\r\n} from \"./constants\";\r\n\r\nimport {\r\n  AddAccessFailed,\r\n  AddAccessSuccess,\r\n  deleteAccessFailed,\r\n  deleteAccessSuccess,\r\n  getUserAccessFailed,\r\n  getUserAccessSuccess,\r\n  replyAccessFailed,\r\n  replyAccessSuccess,\r\n  updateAccessFailed,\r\n  updateAccessSuccess,\r\n} from \"./actions\";\r\n\r\nimport { requestApi } from \"helpers/api\";\r\n\r\nfunction* getUserAccessApi({ payload: { user, room_id } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/access/\",\r\n      params: { user, room_id },\r\n    });\r\n\r\n    if (res.status === \"success\") {\r\n      yield put(getUserAccessSuccess(res.result.accesses));\r\n    } else {\r\n      yield put(getUserAccessFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getUserAccessFailed(error));\r\n  }\r\n}\r\n\r\nfunction* addAccessApi({ payload: { user, room_id, user_id, role } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/access/add\",\r\n      data: { room_id, user_id, role },\r\n    });\r\n\r\n    if (res.status === \"success\") {\r\n      yield put(AddAccessSuccess(res.result.access));\r\n    } else {\r\n      yield put(AddAccessFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(AddAccessFailed(error));\r\n  }\r\n}\r\n\r\nfunction* updateAccessApi({ payload: { user, room_id, access_id, role } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/access/edit\",\r\n      data: { room_id, access_id, role: role },\r\n    });\r\n\r\n    if (res.status === \"success\") {\r\n      yield put(updateAccessSuccess(res.result.access));\r\n    } else {\r\n      yield put(updateAccessFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(updateAccessFailed(error));\r\n  }\r\n}\r\n\r\nfunction* replyAccessApi({ payload: { user, access_id, accepted } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/access/reply\",\r\n      data: { access_id, accepted },\r\n    });\r\n\r\n    if (res.status === \"success\") {\r\n      yield put(replyAccessSuccess(res.result.access));\r\n    } else {\r\n      yield put(replyAccessFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(replyAccessFailed(error));\r\n  }\r\n}\r\n\r\nfunction* deleteAccessApi({ payload: { user, room_id, access_id } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/access/\",\r\n      data: { room_id, access_id },\r\n    });\r\n\r\n    if (res.status === \"success\") {\r\n      yield put(deleteAccessSuccess(access_id));\r\n    } else {\r\n      yield put(deleteAccessFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteAccessFailed(error));\r\n  }\r\n}\r\n\r\nfunction* watchGetUserAccess() {\r\n  yield takeEvery(GET_USER_ACCESS, getUserAccessApi);\r\n}\r\nfunction* watchAddAccess() {\r\n  yield takeEvery(ADD_ACCESS, addAccessApi);\r\n}\r\n\r\nfunction* watchUpdateAccess() {\r\n  yield takeEvery(UPDATE_ACCESS, updateAccessApi);\r\n}\r\nfunction* watchReplyAccess() {\r\n  yield takeEvery(REPLY_ACCESS, replyAccessApi);\r\n}\r\n\r\nfunction* watchDeleteAccess() {\r\n  yield takeEvery(DELETE_ACCESS, deleteAccessApi);\r\n}\r\n\r\nfunction* roomAccessSaga() {\r\n  yield all([\r\n    fork(watchGetUserAccess),\r\n    fork(watchUpdateAccess),\r\n    fork(watchAddAccess),\r\n    fork(watchReplyAccess),\r\n    fork(watchDeleteAccess),\r\n  ]);\r\n}\r\n\r\nexport default roomAccessSaga;\r\n","import { requestApi } from \"helpers/api\";\r\nimport { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  getAreaData,\r\n  getCubeData,\r\n  getCurrentData,\r\n  getSensorData,\r\n} from \"redux/roomData/actions\";\r\nimport { getRoomStructure } from \"redux/roomStructrure/actions\";\r\nimport {\r\n  getActivatesFailed,\r\n  getActivatesSuccess,\r\n  getStationsSuccess,\r\n  getStationsFailed,\r\n  addActivateSuccess,\r\n  addActivateFailed,\r\n  deleteActivateSuccess,\r\n  deleteActivateFailed,\r\n} from \"./actions\";\r\nimport {\r\n  ADD_ACTIVATE,\r\n  DELETE_ACTIVATE,\r\n  GET_ACTIVATES,\r\n  GET_STATIONS,\r\n} from \"./constants\";\r\n\r\nfunction* getActivatesApi({ payload: { user, room_id } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate/all\",\r\n      params: { room_id },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(getActivatesSuccess(res.result.activates));\r\n    } else {\r\n      yield put(getActivatesFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getActivatesFailed(error));\r\n  }\r\n}\r\n\r\nfunction* getStationsApi({ payload: { user, room_id, username, password } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate/getStation\",\r\n      data: { room_id, username, password },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(getStationsSuccess(res.result.stations));\r\n    } else {\r\n      yield put(getStationsFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getStationsFailed(error));\r\n  }\r\n}\r\n\r\nfunction* addActivateApi({\r\n  payload: { user, room_id, username, password, station_id, station_name },\r\n}) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate/add\",\r\n      data: {\r\n        room_id,\r\n        username,\r\n        password,\r\n        station_id,\r\n        station_name,\r\n      },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(addActivateSuccess(res.result.activate));\r\n\r\n      //refesh data\r\n      yield put(getRoomStructure(user, room_id));\r\n\r\n      yield put(getAreaData(user, room_id));\r\n      yield put(getCurrentData(user, room_id));\r\n      yield put(getSensorData(user, room_id));\r\n      yield put(getCubeData(user, room_id));\r\n    } else {\r\n      yield put(addActivateFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(addActivateFailed(error));\r\n  }\r\n}\r\n\r\nfunction* deleteActivateApi({ payload: { user, room_id, activate_id } }) {\r\n  try {\r\n    const res = yield call(requestApi, {\r\n      method: \"delete\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/activate\",\r\n      data: { room_id, activate_id },\r\n    });\r\n    if (res.status === \"success\") {\r\n      yield put(deleteActivateSuccess(activate_id));\r\n\r\n      //refesh data\r\n      yield put(getRoomStructure(user, room_id));\r\n\r\n      yield put(getAreaData(user, room_id));\r\n      yield put(getCurrentData(user, room_id));\r\n      yield put(getSensorData(user, room_id));\r\n      yield put(getCubeData(user, room_id));\r\n    } else {\r\n      yield put(deleteActivateFailed(res.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteActivateFailed(error));\r\n  }\r\n}\r\n\r\nfunction* watchGetActivates() {\r\n  yield takeEvery(GET_ACTIVATES, getActivatesApi);\r\n}\r\n\r\nfunction* watchGetStations() {\r\n  yield takeEvery(GET_STATIONS, getStationsApi);\r\n}\r\n\r\nfunction* watchAddActivate() {\r\n  yield takeEvery(ADD_ACTIVATE, addActivateApi);\r\n}\r\n\r\nfunction* watchDeleteActivate() {\r\n  yield takeEvery(DELETE_ACTIVATE, deleteActivateApi);\r\n}\r\n\r\nfunction* roomActivateSaga() {\r\n  yield all([\r\n    fork(watchGetActivates),\r\n    fork(watchGetStations),\r\n    fork(watchAddActivate),\r\n    fork(watchDeleteActivate),\r\n  ]);\r\n}\r\n\r\nexport default roomActivateSaga;\r\n","import { all, call, fork, takeEvery, put } from \"redux-saga/effects\";\r\n\r\nimport {\r\n  ADD_AREA,\r\n  ADD_MONITOR,\r\n  DELETE_AREA,\r\n  DELETE_MONITOR,\r\n  GET_AREAS,\r\n  GET_AREA_INFO,\r\n  UPDATE_AREA,\r\n  UPDATE_MONITOR,\r\n} from \"./constants\";\r\n\r\nimport {\r\n  addAreaFailed,\r\n  addAreaSuccess,\r\n  addMonitorFailed,\r\n  addMonitorSuccess,\r\n  deleteAreaFailed,\r\n  deleteAreaSuccess,\r\n  deleteMonitorFailed,\r\n  deleteMonitorSuccess,\r\n  getAreaInfoFailed,\r\n  getAreaInfoSuccess,\r\n  getAreasFailed,\r\n  getAreasSuccess,\r\n  updateAreaFailed,\r\n  updateAreaSuccess,\r\n  updateMonitorFailed,\r\n  updateMonitorSuccess,\r\n} from \"./actions\";\r\nimport { requestApi } from \"helpers/api\";\r\n\r\nfunction* GetAreasApi({ payload: { user, room_id } }) {\r\n  try {\r\n    const response = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/area/all\",\r\n      params: { room_id },\r\n    });\r\n    if (response.status == \"success\") {\r\n      yield put(getAreasSuccess(response.result.areas));\r\n    } else {\r\n      yield put(getAreasFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getAreasFailed(error));\r\n  }\r\n}\r\n\r\nfunction* GetAreaInfoApi({ payload: { user, room_id, area_id } }) {\r\n  try {\r\n    const response = yield call(requestApi, {\r\n      method: \"get\",\r\n      headers: {\r\n        \"x-access-token\": user.accessToken,\r\n      },\r\n      url: \"api/room/area/\",\r\n      params: {\r\n        room_id,\r\n        area_id,\r\n      },\r\n    });\r\n    if (response.status == \"success\") {\r\n      yield put(getAreaInfoSuccess(response.result.area));\r\n    } else {\r\n      yield put(getAreaInfoFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(getAreaInfoFailed(error));\r\n  }\r\n}\r\n\r\nfunction* AddAreaApi({ payload: { user, room_id, area } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: {\r\n      room_id,\r\n      ...area,\r\n    },\r\n    url: \"api/room/area/create\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(addAreaSuccess(response.result.area));\r\n    } else {\r\n      yield put(addAreaFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(addAreaFailed(error));\r\n  }\r\n}\r\n\r\nfunction* UpdateAreaApi({ payload: { user, room_id, area_id, area } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id, ...area },\r\n    url: \"api/room/area/edit\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(updateAreaSuccess(response.result.area));\r\n    } else {\r\n      yield put(updateAreaFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(updateAreaFailed(error));\r\n  }\r\n}\r\nfunction* DeleteAreaApi({ payload: { user, room_id, area_id } }) {\r\n  const options = {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id },\r\n    url: \"api/room/area/\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(deleteAreaSuccess(area_id));\r\n    } else {\r\n      yield put(deleteAreaFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteAreaFailed(error));\r\n  }\r\n}\r\n\r\n////\r\n\r\nfunction* AddMonitorApi({ payload: { user, room_id, area_id, monitor } }) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: {\r\n      room_id,\r\n      area_id,\r\n      monitor: monitor,\r\n    },\r\n    url: \"api/room/area/monitor/add\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(addMonitorSuccess(response.result.monitors));\r\n    } else {\r\n      yield put(addMonitorFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(addMonitorFailed(error));\r\n  }\r\n}\r\n\r\nfunction* UpdateMonitorApi({\r\n  payload: { user, room_id, area_id, monitor_id, monitor },\r\n}) {\r\n  const options = {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id, monitor_id, monitor: monitor },\r\n    url: \"api/room/area/monitor/edit\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(updateMonitorSuccess(response.result.monitor));\r\n    } else {\r\n      yield put(updateMonitorFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(updateMonitorFailed(error));\r\n  }\r\n}\r\nfunction* DeleteMonitorApi({\r\n  payload: { user, room_id, area_id, monitor_id },\r\n}) {\r\n  const options = {\r\n    method: \"delete\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-access-token\": user.accessToken,\r\n    },\r\n    data: { room_id, area_id, monitor_id },\r\n    url: \"api/room/area/monitor/\",\r\n  };\r\n\r\n  try {\r\n    const response = yield call(requestApi, options);\r\n    if (response.status === \"success\") {\r\n      yield put(deleteMonitorSuccess(response.result.monitors));\r\n    } else {\r\n      yield put(deleteMonitorFailed(response.result));\r\n    }\r\n  } catch (error) {\r\n    yield put(deleteMonitorFailed(error));\r\n  }\r\n}\r\n\r\nfunction* watchGetAreas() {\r\n  yield takeEvery(GET_AREAS, GetAreasApi);\r\n}\r\n\r\nfunction* watchGetAreaInfo() {\r\n  yield takeEvery(GET_AREA_INFO, GetAreaInfoApi);\r\n}\r\n\r\nfunction* watchAddArea() {\r\n  yield takeEvery(ADD_AREA, AddAreaApi);\r\n}\r\n\r\nfunction* watchUpdateArea() {\r\n  yield takeEvery(UPDATE_AREA, UpdateAreaApi);\r\n}\r\nfunction* watchDeleteArea() {\r\n  yield takeEvery(DELETE_AREA, DeleteAreaApi);\r\n}\r\n\r\nfunction* watchAddMonitor() {\r\n  yield takeEvery(ADD_MONITOR, AddMonitorApi);\r\n}\r\n\r\nfunction* watchUpdateMonitor() {\r\n  yield takeEvery(UPDATE_MONITOR, UpdateMonitorApi);\r\n}\r\nfunction* watchDeleteMonitor() {\r\n  yield takeEvery(DELETE_MONITOR, DeleteMonitorApi);\r\n}\r\n\r\nfunction* roomAreaSaga() {\r\n  yield all([\r\n    fork(watchGetAreas),\r\n    fork(watchGetAreaInfo),\r\n    fork(watchAddArea),\r\n    fork(watchUpdateArea),\r\n    fork(watchDeleteArea),\r\n    fork(watchAddMonitor),\r\n    fork(watchUpdateMonitor),\r\n    fork(watchDeleteMonitor),\r\n  ]);\r\n}\r\n\r\nexport default roomAreaSaga;\r\n","// @flow\r\nimport { all } from \"redux-saga/effects\";\r\nimport authSaga from \"./auth/saga\";\r\nimport layoutSaga from \"./layout/saga\";\r\nimport appMenuSaga from \"./appMenu/saga\";\r\n\r\nimport roomListSaga from \"./roomList/saga\";\r\nimport notificationListSaga from \"./notification/saga\";\r\nimport roomDataSaga from \"./roomData/saga\";\r\nimport roomStructrureSaga from \"./roomStructrure/saga\";\r\nimport roomAccessSaga from \"./roomAccess/saga\";\r\nimport roomActivateSaga from \"./roomActivate/saga\";\r\nimport roomAreaSaga from \"./roomArea/saga\";\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    authSaga(),\r\n    layoutSaga(),\r\n    appMenuSaga(),\r\n    roomListSaga(),\r\n    notificationListSaga(),\r\n    roomDataSaga(),\r\n    roomStructrureSaga(),\r\n    roomAccessSaga(),\r\n    roomActivateSaga(),\r\n    roomAreaSaga(),\r\n  ]);\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { ToastProvider} from 'react-toast-notifications'\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <ToastProvider placement ='bottom-right' autoDismissTimeout={5000}>\r\n            <App />\r\n        </ToastProvider> \r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n","import {\r\n    GET_AREA_DATA,\r\n    GET_AREA_DATA_SUCCESS,\r\n    GET_AREA_DATA_FAILED,\r\n\r\n    GET_CURRENT_DATA,\r\n    GET_CURRENT_DATA_SUCCESS,\r\n    GET_CURRENT_DATA_FAILED,\r\n\r\n    GET_SENSOR_DATA,\r\n    GET_SENSOR_DATA_SUCCESS,\r\n    GET_SENSOR_DATA_FAILED,\r\n\r\n    GET_CUBE_DATA,\r\n    GET_CUBE_DATA_SUCCESS,\r\n    GET_CUBE_DATA_FAILED,\r\n} from './constants';\r\n\r\nexport const getAreaData = (user,room_id) => ({\r\n    type: GET_AREA_DATA,\r\n    payload: {\r\n        room_id,\r\n        user,\r\n    }\r\n})\r\n\r\nexport const getAreaDataSuccess = (data) => ({\r\n    type: GET_AREA_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getAreaDataFailed = (error) => ({\r\n    type: GET_AREA_DATA_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const getCurrentData = (user,room_id) => ({\r\n    type: GET_CURRENT_DATA,\r\n    payload: {\r\n        room_id,\r\n        user\r\n    }\r\n})\r\n\r\nexport const getCurrentDataSuccess = (data) => ({\r\n    type: GET_CURRENT_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getCurrentDataFailed = (error) => ({\r\n    type: GET_CURRENT_DATA_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const getSensorData = (user,room_id) => ({\r\n    type: GET_SENSOR_DATA,\r\n    payload: {\r\n        room_id,\r\n        user\r\n    }\r\n})\r\n\r\nexport const getSensorDataSuccess = (data) => ({\r\n    type: GET_SENSOR_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getSensorDataFailed = (error) => ({\r\n    type: GET_SENSOR_DATA_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const getCubeData = (user,room_id) => ({\r\n    type: GET_CUBE_DATA,\r\n    payload: {\r\n        room_id,\r\n        user\r\n    }\r\n})\r\nexport const getCubeDataSuccess = (data) => ({\r\n    type: GET_CUBE_DATA_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getCubeDataFailed = (error) => ({\r\n    type: GET_CUBE_DATA_FAILED,\r\n    payload: {error}\r\n})","export const GET_AREA_DATA = \"GET_AREA_DATA\";\r\nexport const GET_AREA_DATA_SUCCESS = \"GET_AREA_DATA_SUCCESS\";\r\nexport const GET_AREA_DATA_FAILED = \"GET_AREA_DATA_FAILED\";\r\n\r\nexport const GET_CURRENT_DATA = \"GET_CURRENT_DATA\";\r\nexport const GET_CURRENT_DATA_SUCCESS = \"GET_CURRENT_DATA_SUCCESS\";\r\nexport const GET_CURRENT_DATA_FAILED = \"GET_CURRENT_DATA_FAILED\";\r\n\r\nexport const GET_SENSOR_DATA = \"GET_SENSOR_DATA\";\r\nexport const GET_SENSOR_DATA_SUCCESS = \"GET_SENSOR_DATA_SUCCESS\";\r\nexport const GET_SENSOR_DATA_FAILED = \"GET_SENSOR_DATA_FAILED\";\r\n\r\nexport const GET_CUBE_DATA = \"GET_CUBE_DATA\";\r\nexport const GET_CUBE_DATA_SUCCESS = \"GET_CUBE_DATA_SUCCESS\";\r\nexport const GET_CUBE_DATA_FAILED = \"GET_CUBE_DATA_FAILED\";","export const GET_CURR_ROOM_SENSOR_MAP = \"GET_CURR_ROOM_SENSOR_MAP\";\r\nexport const GET_CURR_ROOM_SENSOR_MAP_SUCCESS = \"GET_CURR_ROOM_SENSOR_MAP_SUCCESS\";\r\nexport const GET_CURR_ROOM_SENSOR_MAP_FAILED = \"GET_CURR_ROOM_SENSOR_MAP_FAILED\";\r\n\r\nexport const ADD_SENSOR = \"ADD_SENSOR\";\r\nexport const ADD_SENSOR_SUCCESS = \"ADD_SENSOR_SUCCESS\";\r\nexport const ADD_SENSOR_FAILED = \"ADD_SENSOR_FAILED\";\r\n\r\nexport const UPDATE_SENSOR = \"UPDATE_SENSOR\";\r\nexport const UPDATE_SENSOR_SUCCESS = \"UPDATE_SENSOR_SUCCESS\";\r\nexport const UPDATE_SENSOR_FAILED = \"UPDATE_SENSOR_FAILED\";\r\n\r\nexport const DELETE_SENSOR = \"DELETE_SENSOR\";\r\nexport const DELETE_SENSOR_SUCCESS = \"DELETE_SENSOR_SUCCESS\";\r\nexport const DELETE_SENSOR_FAILED = \"DELETE_SENSOR_FAILED\";","export const GET_ACTIVATES = \"GET_ACTIVATE\";\r\nexport const GET_ACTIVATES_SUCCESS = \"GET_ACTIVATE_SUCCESS\";\r\nexport const GET_ACTIVATES_FAILED = \"GET_ACTIVATE_FAILED\";\r\n\r\n\r\nexport const GET_STATIONS = \"GET_STATIONS\";\r\nexport const GET_STATIONS_SUCCESS = \"GET_STATIONS_SUCCESS\";\r\nexport const GET_STATIONS_FAILED = \"GET_STATIONS_FAILED\";\r\n\r\n\r\nexport const ADD_ACTIVATE = \"ADD_ACTIVATE\";\r\nexport const ADD_ACTIVATE_SUCCESS = \"ADD_ACTIVATE_SUCCESS\";\r\nexport const ADD_ACTIVATE_FAILED = \"ADD_ACTIVATE_FAILED\";\r\n\r\n\r\nexport const DELETE_ACTIVATE = \"DELETE_ACTIVATE\";\r\nexport const DELETE_ACTIVATE_SUCCESS = \"DELETE_ACTIVATE_SUCCESS\";\r\nexport const DELETE_ACTIVATE_FAILED = \"DELETE_ACTIVATE_FAILED\";\r\n\r\n","export const GET_NOTIFICATION_LIST = 'GET_NOTIFICATION_LIST';\r\nexport const GET_NOTIFICATION_LIST_SUCCESS = 'GET_NOTIFICATION_LIST_SUCCESS';\r\nexport const GET_NOTIFICATION_LIST_FAILED = 'GET_NOTIFICATION_LIST_FAILED';\r\n\r\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\r\nexport const DELETE_NOTIFICATION_SUCCESS = 'DELETE_NOTIFICATION_SUCCESS';\r\nexport const DELETE_NOTIFICATION_FAILED = 'DELETE_NOTIFICATION_FAILED';\r\n\r\nexport const DELETE_ALL_NOTIFICATION = 'DELETE_ALL_NOTIFICATION';\r\nexport const DELETE_ALL_NOTIFICATION_SUCCESS = 'DELETE_ALL_NOTIFICATION_SUCCESS';\r\nexport const DELETE_ALL_NOTIFICATION_FAILED = 'DELETE_ALL_NOTIFICATION_FAILED';\r\n\r\nexport const UPDATE_NOTIFICATION = \"UPDATE_NOTIFICATION\";\r\nexport const PUSH_NOTIFICATION = \"PUSH_NOTIFICATION\";","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","import {\r\n  GET_AREA_INFO,\r\n  GET_AREA_INFO_SUCCESS,\r\n  GET_AREA_INFO_FAILED,\r\n  GET_AREAS,\r\n  GET_AREAS_SUCCESS,\r\n  GET_AREAS_FAILED,\r\n  ADD_AREA,\r\n  ADD_AREA_SUCCESS,\r\n  ADD_AREA_FAILED,\r\n  ADD_MONITOR,\r\n  ADD_MONITOR_SUCCESS,\r\n  ADD_MONITOR_FAILED,\r\n  UPDATE_AREA,\r\n  UPDATE_AREA_SUCCESS,\r\n  UPDATE_AREA_FAILED,\r\n  UPDATE_MONITOR,\r\n  UPDATE_MONITOR_SUCCESS,\r\n  UPDATE_MONITOR_FAILED,\r\n  DELETE_AREA,\r\n  DELETE_AREA_SUCCESS,\r\n  DELETE_AREA_FAILED,\r\n  DELETE_MONITOR,\r\n  DELETE_MONITOR_SUCCESS,\r\n  DELETE_MONITOR_FAILED,\r\n} from \"./constants\";\r\n\r\nexport const getAreas = (user, room_id) => ({\r\n  type: GET_AREAS,\r\n  payload: { user, room_id },\r\n});\r\n\r\nexport const getAreasSuccess = (areas) => ({\r\n  type: GET_AREAS_SUCCESS,\r\n  payload: { areas },\r\n});\r\n\r\nexport const getAreasFailed = (error) => ({\r\n  type: GET_AREAS_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const getAreaInfo = (user, room_id, area_id) => ({\r\n  type: GET_AREA_INFO,\r\n  payload: { user, room_id, area_id },\r\n});\r\n\r\nexport const getAreaInfoSuccess = (area) => ({\r\n  type: GET_AREA_INFO_SUCCESS,\r\n  payload: { area },\r\n});\r\n\r\nexport const getAreaInfoFailed = (error) => ({\r\n  type: GET_AREA_INFO_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const addArea = (user, room_id, area) => ({\r\n  type: ADD_AREA,\r\n  payload: { user, room_id, area },\r\n});\r\n\r\nexport const addAreaSuccess = (area) => ({\r\n  type: ADD_AREA_SUCCESS,\r\n  payload: { area },\r\n});\r\n\r\nexport const addAreaFailed = (error) => ({\r\n  type: ADD_AREA_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const updateArea = (user, room_id, area_id, area) => ({\r\n  type: UPDATE_AREA,\r\n  payload: { user, room_id, area_id, area },\r\n});\r\n\r\nexport const updateAreaSuccess = (area) => ({\r\n  type: UPDATE_AREA_SUCCESS,\r\n  payload: { area },\r\n});\r\n\r\nexport const updateAreaFailed = (error) => ({\r\n  type: UPDATE_AREA_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteArea = (user, room_id, area_id) => ({\r\n  type: DELETE_AREA,\r\n  payload: { user, room_id, area_id },\r\n});\r\n\r\nexport const deleteAreaSuccess = (area_id) => ({\r\n  type: DELETE_AREA_SUCCESS,\r\n  payload: { area_id },\r\n});\r\n\r\nexport const deleteAreaFailed = (error) => ({\r\n  type: DELETE_AREA_FAILED,\r\n  payload: { error },\r\n});\r\n\r\n///\r\n\r\nexport const addMonitor = (user, room_id, area_id, monitor) => ({\r\n  type: ADD_MONITOR,\r\n  payload: { user, room_id, area_id, monitor },\r\n});\r\n\r\nexport const addMonitorSuccess = (monitors) => ({\r\n  type: ADD_MONITOR_SUCCESS,\r\n  payload: { monitors },\r\n});\r\n\r\nexport const addMonitorFailed = (error) => ({\r\n  type: ADD_MONITOR_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const updateMonitor = (user, room_id, area_id, monitor_id, monitor) => ({\r\n  type: UPDATE_MONITOR,\r\n  payload: { user, room_id, area_id, monitor_id, monitor },\r\n});\r\n\r\nexport const updateMonitorSuccess = (monitor) => ({\r\n  type: UPDATE_MONITOR_SUCCESS,\r\n  payload: { monitor },\r\n});\r\n\r\nexport const updateMonitorFailed = (error) => ({\r\n  type: UPDATE_MONITOR_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteMonitor = (user, room_id, area_id, monitor_id) => ({\r\n  type: DELETE_MONITOR,\r\n  payload: { user, room_id, area_id, monitor_id },\r\n});\r\n\r\nexport const deleteMonitorSuccess = (monitors) => ({\r\n  type: DELETE_MONITOR_SUCCESS,\r\n  payload: { monitors },\r\n});\r\n\r\nexport const deleteMonitorFailed = (error) => ({\r\n  type: DELETE_MONITOR_FAILED,\r\n  payload: { error },\r\n});\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","import {\r\n    GET_ROOM_LIST,\r\n    GET_ROOM_LIST_SUCCESS,\r\n    GET_ROOM_LIST_FAILED,\r\n\r\n    SET_CURR_ROOM,\r\n\r\n   GET_CURR_ROOM_INFO,\r\n   GET_CURR_ROOM_INFO_SUCCESS,\r\n   GET_CURR_ROOM_INFO_FAILED,\r\n\r\n\r\n    CREATE_ROOM,\r\n    CREATE_ROOM_SUCCESS,\r\n    CREATE_ROOM_FAILED,\r\n\r\n    UPDATE_ROOM,\r\n    UPDATE_ROOM_SUCCESS,\r\n    UPDATE_ROOM_FAILED,\r\n\r\n    DELETE_ROOM,\r\n    DELETE_ROOM_SUCCESS,\r\n    DELETE_ROOM_FAILED,\r\n} from './constants';\r\n\r\nexport const getRoomList = (user) => ({\r\n    type: GET_ROOM_LIST,\r\n    payload: {user}\r\n})\r\n\r\nexport const getRoomListSuccess = (accesses) => ({\r\n    type: GET_ROOM_LIST_SUCCESS,\r\n    payload: {accesses}\r\n})\r\n\r\nexport const getRoomListFailed = (error) => ({\r\n    type: GET_ROOM_LIST_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\n\r\nexport const getCurrentRoomInfo = (user,room_id) => ({\r\n    type: GET_CURR_ROOM_INFO,\r\n    payload: {user,room_id}\r\n})\r\nexport const getCurrentRoomInfoSuccess = (room) => ({\r\n    type: GET_CURR_ROOM_INFO_SUCCESS,\r\n    payload: {room}\r\n})\r\nexport const getCurrentRoomInfoFailed  = (error) => ({\r\n    type: GET_CURR_ROOM_INFO_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const setCurrentRoom = (room) => ({\r\n    type: SET_CURR_ROOM,\r\n    payload: {room}\r\n})\r\n\r\nexport const createRoom = (user,room) => ({\r\n    type: CREATE_ROOM,\r\n    payload: {user,room}\r\n})\r\nexport const createRoomSuccess = (room) => ({\r\n    type: CREATE_ROOM_SUCCESS,\r\n    payload: {room}\r\n})\r\nexport const createRoomFailed = (error) => ({\r\n    type: CREATE_ROOM_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const updateRoom = (user,room_id,room_info) => ({\r\n    type: UPDATE_ROOM,\r\n    payload: {user,room_id,room_info}\r\n})\r\nexport const updateRoomSuccess = (room) => ({\r\n    type: UPDATE_ROOM_SUCCESS,\r\n    payload: {room}\r\n})\r\nexport const updateRoomFailed = (error) => ({\r\n    type: UPDATE_ROOM_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n\r\nexport const deleteRoom = (user,room_id) => ({\r\n    type: DELETE_ROOM,\r\n    payload: {user,room_id}\r\n})\r\nexport const deleteRoomSuccess = (room_id) => ({\r\n    type: DELETE_ROOM_SUCCESS,\r\n    payload: {room_id}\r\n})\r\nexport const deleteRoomFailed = (error) => ({\r\n    type: DELETE_ROOM_FAILED,\r\n    payload: {error}\r\n})\r\n\r\n","import { GET_CURR_ROOM_INFO_FAILED } from 'redux/roomList/constants';\r\nimport {\r\n    GET_CURR_ROOM_SENSOR_MAP,\r\n    GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n    GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n\r\n    ADD_SENSOR,\r\n    ADD_SENSOR_SUCCESS,\r\n    ADD_SENSOR_FAILED,\r\n\r\n    UPDATE_SENSOR,\r\n    UPDATE_SENSOR_SUCCESS,\r\n    UPDATE_SENSOR_FAILED,\r\n\r\n    DELETE_SENSOR,\r\n    DELETE_SENSOR_SUCCESS,\r\n    DELETE_SENSOR_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const getRoomStructure = (user,room_id) => ({\r\n    type: GET_CURR_ROOM_SENSOR_MAP,\r\n    payload: {\r\n        user,\r\n        room_id,\r\n    }\r\n})\r\nexport const getRoomStructureSuccess = (data) => ({\r\n    type: GET_CURR_ROOM_SENSOR_MAP_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const getRoomStructureFailed = (error) => ({\r\n    type: GET_CURR_ROOM_SENSOR_MAP_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const addSensor = (user,room_id,sensor_id,location) => ({\r\n    type: ADD_SENSOR,\r\n    payload: {\r\n        user,room_id,sensor_id,location\r\n    }\r\n})\r\nexport const addSensorSuccess = (data) => ({\r\n    type: ADD_SENSOR_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const addSensorFailed = (error) => ({\r\n    type: ADD_SENSOR_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const deleteSensor = (user,room_id,sensor_id) => ({\r\n    type: DELETE_SENSOR,\r\n    payload: {\r\n        user,room_id,sensor_id\r\n    }\r\n})\r\nexport const deleteSensorSuccess = (data) => ({\r\n    type: DELETE_SENSOR_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const deleteSensorFailed = (error) => ({\r\n    type: DELETE_SENSOR_FAILED,\r\n    payload: {error}\r\n})\r\n\r\nexport const updateSensor = (user,room_id,sensor_id,location) => ({\r\n    type: UPDATE_SENSOR,\r\n    payload: {\r\n        user,room_id,sensor_id,location\r\n    }\r\n})\r\nexport const updateSensorSuccess = (data) => ({\r\n    type: UPDATE_SENSOR_SUCCESS,\r\n    payload: {data}\r\n})\r\n\r\nexport const updateSensorFailed = (error) => ({\r\n    type: UPDATE_SENSOR_FAILED,\r\n    payload: {error}\r\n})\r\n","import {\r\n  GET_USER_ACCESS,\r\n  GET_USER_ACCESS_SUCCESS,\r\n  ADD_ACCESS,\r\n  ADD_ACCESS_SUCCESS,\r\n  ADD_ACCESS_FAILED,\r\n  UPDATE_ACCESS,\r\n  UPDATE_ACCESS_SUCCESS,\r\n  UPDATE_ACCESS_FAILED,\r\n  REPLY_ACCESS,\r\n  REPLY_ACCESS_SUCCESS,\r\n  REPLY_ACCESS_FAILED,\r\n  DELETE_ACCESS,\r\n  DELETE_ACCESS_SUCCESS,\r\n  DELETE_ACCESS_FAILED,\r\n  GET_USER_ACCESS_FAILED,\r\n} from \"./constants\";\r\n\r\nexport const getUserAccess = (user, room_id) => ({\r\n  type: GET_USER_ACCESS,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n  },\r\n});\r\nexport const getUserAccessSuccess = (accesses) => ({\r\n  type: GET_USER_ACCESS_SUCCESS,\r\n  payload: { accesses },\r\n});\r\n\r\nexport const getUserAccessFailed = (error) => ({\r\n  type: GET_USER_ACCESS_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const AddAccess = (user, room_id, user_id, role) => ({\r\n  type: ADD_ACCESS,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    user_id,\r\n    role,\r\n  },\r\n});\r\nexport const AddAccessSuccess = (access) => ({\r\n  type: ADD_ACCESS_SUCCESS,\r\n  payload: { access },\r\n});\r\n\r\nexport const AddAccessFailed = (error) => ({\r\n  type: ADD_ACCESS_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const updateAccess = (user, room_id, access_id, role) => ({\r\n  type: UPDATE_ACCESS,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    access_id,\r\n    role,\r\n  },\r\n});\r\nexport const updateAccessSuccess = (access) => ({\r\n  type: UPDATE_ACCESS_SUCCESS,\r\n  payload: { access },\r\n});\r\n\r\nexport const updateAccessFailed = (error) => ({\r\n  type: UPDATE_ACCESS_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const replyAccess = (user, access_id, accepted) => ({\r\n  type: REPLY_ACCESS,\r\n  payload: {\r\n    user,\r\n    access_id,\r\n    accepted,\r\n  },\r\n});\r\nexport const replyAccessSuccess = (access) => ({\r\n  type: REPLY_ACCESS_SUCCESS,\r\n  payload: { access },\r\n});\r\n\r\nexport const replyAccessFailed = (error) => ({\r\n  type: REPLY_ACCESS_FAILED,\r\n  payload: { error },\r\n});\r\n\r\nexport const deleteAccess = (user, room_id, access_id) => ({\r\n  type: DELETE_ACCESS,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    access_id,\r\n  },\r\n});\r\nexport const deleteAccessSuccess = (access_id) => ({\r\n  type: DELETE_ACCESS_SUCCESS,\r\n  payload: { access_id },\r\n});\r\n\r\nexport const deleteAccessFailed = (error) => ({\r\n  type: DELETE_ACCESS_FAILED,\r\n  payload: { error },\r\n});\r\n","import {\r\n  GET_ACTIVATES,\r\n  GET_ACTIVATES_SUCCESS,\r\n  GET_ACTIVATES_FAILED,\r\n  GET_STATIONS,\r\n  GET_STATIONS_SUCCESS,\r\n  GET_STATIONS_FAILED,\r\n  ADD_ACTIVATE,\r\n  ADD_ACTIVATE_SUCCESS,\r\n  ADD_ACTIVATE_FAILED,\r\n  DELETE_ACTIVATE,\r\n  DELETE_ACTIVATE_SUCCESS,\r\n  DELETE_ACTIVATE_FAILED,\r\n} from \"./constants\";\r\n\r\nexport const getActivates = (user, room_id) => ({\r\n  type: GET_ACTIVATES,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n  },\r\n});\r\n\r\nexport const getActivatesSuccess = (activates) => ({\r\n  type: GET_ACTIVATES_SUCCESS,\r\n  payload: {\r\n    activates,\r\n  },\r\n});\r\n\r\nexport const getActivatesFailed = (error) => ({\r\n  type: GET_ACTIVATES_FAILED,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\nexport const getStations = (user, room_id, username, password) => ({\r\n  type: GET_STATIONS,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    username,\r\n    password,\r\n  },\r\n});\r\n\r\nexport const getStationsSuccess = (stations) => ({\r\n  type: GET_STATIONS_SUCCESS,\r\n  payload: {\r\n    stations,\r\n  },\r\n});\r\n\r\nexport const getStationsFailed = (error) => ({\r\n  type: GET_STATIONS_FAILED,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\nexport const addActivate = (\r\n  user,\r\n  room_id,\r\n  username,\r\n  password,\r\n  station_id,\r\n  station_name\r\n) => ({\r\n  type: ADD_ACTIVATE,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    username,\r\n    password,\r\n    station_id,\r\n    station_name,\r\n  },\r\n});\r\n\r\nexport const addActivateSuccess = (activate) => ({\r\n  type: ADD_ACTIVATE_SUCCESS,\r\n  payload: {\r\n    activate,\r\n  },\r\n});\r\n\r\nexport const addActivateFailed = (error) => ({\r\n  type: ADD_ACTIVATE_FAILED,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n\r\nexport const deleteActivate = (user, room_id, activate_id) => ({\r\n  type: DELETE_ACTIVATE,\r\n  payload: {\r\n    user,\r\n    room_id,\r\n    activate_id,\r\n  },\r\n});\r\n\r\nexport const deleteActivateSuccess = (activate_id) => ({\r\n  type: DELETE_ACTIVATE_SUCCESS,\r\n  payload: {\r\n    activate_id,\r\n  },\r\n});\r\n\r\nexport const deleteActivateFailed = (error) => ({\r\n  type: DELETE_ACTIVATE_FAILED,\r\n  payload: {\r\n    error,\r\n  },\r\n});\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (username, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { username, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (email,username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: {email,username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","import {\r\n    GET_NOTIFICATION_LIST,\r\n    GET_NOTIFICATION_LIST_SUCCESS,\r\n    GET_NOTIFICATION_LIST_FAILED,\r\n\r\n    DELETE_NOTIFICATION,\r\n    DELETE_NOTIFICATION_SUCCESS,\r\n    DELETE_NOTIFICATION_FAILED,\r\n\r\n    DELETE_ALL_NOTIFICATION,\r\n    DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    DELETE_ALL_NOTIFICATION_FAILED,\r\n    \r\n    UPDATE_NOTIFICATION,\r\n    PUSH_NOTIFICATION\r\n} from './constants';\r\n\r\n\r\nexport const getNotificationList = (user) => ({\r\n    type: GET_NOTIFICATION_LIST,\r\n    payload: {user},\r\n});\r\nexport const getNotificationListSuccess = (list) => ({\r\n    type: GET_NOTIFICATION_LIST_SUCCESS,\r\n    payload: {\r\n        list\r\n    },\r\n});\r\nexport const getNotificationListFailed = (error) => ({\r\n    type: GET_NOTIFICATION_LIST_FAILED,\r\n    payload: {\r\n        error\r\n    },\r\n});\r\n\r\n\r\nexport const deleteNotification = (user,notification_id) => ({\r\n    type: DELETE_NOTIFICATION,\r\n    payload: {\r\n        user,\r\n        notification_id\r\n    },\r\n});\r\nexport const deleteNotificationSuccess = (notification_id) => ({\r\n    type: DELETE_NOTIFICATION_SUCCESS,\r\n    payload: {\r\n        notification_id\r\n    },\r\n});\r\nexport const deleteNotificationFailed = (error) => ({\r\n    type: DELETE_NOTIFICATION_FAILED,\r\n    payload: {\r\n        error\r\n    },\r\n});\r\n\r\n\r\nexport const deleteAllNotification = (user) => ({\r\n    type: DELETE_ALL_NOTIFICATION,\r\n    payload: {user},\r\n});\r\n\r\nexport const deleteAllNotificationSuccess = (result) => ({\r\n    type: DELETE_ALL_NOTIFICATION_SUCCESS,\r\n    payload: {\r\n        result\r\n    },\r\n});\r\nexport const deleteAllNotificationFailed = (error) => ({\r\n    type: DELETE_ALL_NOTIFICATION_FAILED,\r\n    payload: {\r\n        error\r\n    },\r\n});\r\n\r\n\r\nexport const updateNotification = (id, data) => ({\r\n    type: UPDATE_NOTIFICATION,\r\n    payload: {\r\n        id,\r\n        data\r\n    }\r\n});\r\nexport const pushNotification = (notification) => ({\r\n    type: PUSH_NOTIFICATION,\r\n    payload: {\r\n        notification\r\n    },\r\n});","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\nimport {requestApi} from './api';\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(user.accessToken);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    let newUser= user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n    return newUser;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","export const GET_AREAS = \"GET_AREAS\";\r\nexport const GET_AREAS_SUCCESS = \"GET_AREAS_SUCCESS\";\r\nexport const GET_AREAS_FAILED = \"GET_AREAS_FAILED\";\r\n\r\nexport const GET_AREA_INFO = \"GET_AREA_INFO\";\r\nexport const GET_AREA_INFO_SUCCESS = \"GET_AREA_INFO_SUCCESS\";\r\nexport const GET_AREA_INFO_FAILED = \"GET_AREA_INFO_FAILED\";\r\n\r\nexport const ADD_AREA = \"ADD_AREA\";\r\nexport const ADD_AREA_SUCCESS = \"ADD_AREA_SUCCESS\";\r\nexport const ADD_AREA_FAILED = \"ADD_AREA_FAILED\";\r\n\r\nexport const ADD_MONITOR = \"ADD_MONITOR\";\r\nexport const ADD_MONITOR_SUCCESS = \"ADD_MONITOR_SUCCESS\";\r\nexport const ADD_MONITOR_FAILED = \"ADD_MONITOR_FAILED\";\r\n\r\nexport const UPDATE_AREA = \"UPDATE_AREA\";\r\nexport const UPDATE_AREA_SUCCESS = \"UPDATE_AREA_SUCCESS\";\r\nexport const UPDATE_AREA_FAILED = \"UPDATE_AREA_FAILED\";\r\n\r\nexport const UPDATE_MONITOR = \"UPDATE_MONITOR\";\r\nexport const UPDATE_MONITOR_SUCCESS = \"UPDATE_MONITOR_SUCCESS\";\r\nexport const UPDATE_MONITOR_FAILED = \"UPDATE_MONITOR_FAILED\";\r\n\r\nexport const DELETE_AREA = \"DELETE_AREA\";\r\nexport const DELETE_AREA_SUCCESS = \"DELETE_AREA_SUCCESS\";\r\nexport const DELETE_AREA_FAILED = \"DELETE_AREA_FAILED\";\r\n\r\nexport const DELETE_MONITOR = \"DELETE_MONITOR\";\r\nexport const DELETE_MONITOR_SUCCESS = \"DELETE_MONITOR_SUCCESS\";\r\nexport const DELETE_MONITOR_FAILED = \"DELETE_MONITOR_FAILED\";\r\n","const axios = require('axios');\r\nconst constants = require('constants/apiConfig');\r\n/**\r\n * Fetch data from given url\r\n * @param {*} config\r\n */\r\nconst requestApi =(config={}) => {\r\n    //console.log(config);\r\n    return axios({...config,baseURL: constants.BASE_URL})\r\n        .then(res=>{\r\n            /* console.log(res.status);\r\n            console.log(res.data); */\r\n            return res.data;\r\n        })\r\n        .catch(err =>{\r\n            /* console.log(err.response.status);\r\n            console.log(err.response.data); */\r\n            return err.response.data;\r\n        })\r\n};\r\n\r\nexport { requestApi };\r\n","export const BASE_URL = \"http://vikhan.herokuapp.com/\"\r\nexport const BASE_URL2 = \"http://localhost:8080/\"\r\n","export const GET_ROOM_LIST = \"GET_ROOM_LIST\";\r\nexport const GET_ROOM_LIST_SUCCESS = \"GET_ROOM_LIST_SUCCESS\";\r\nexport const GET_ROOM_LIST_FAILED = \"GET_ROOM_LIST_FAILED\";\r\n\r\nexport const GET_CURR_ROOM_INFO = \"GET_ROOM_INFO\";\r\nexport const GET_CURR_ROOM_INFO_SUCCESS = \"GET_ROOM_INFO_SUCCESS\";\r\nexport const GET_CURR_ROOM_INFO_FAILED = \"GET_ROOM_INFO_FAILED\";\r\n\r\nexport const SET_CURR_ROOM = \"SET_CURR_ROOM\";\r\n\r\nexport const CREATE_ROOM = \"CREATE_ROOM\";\r\nexport const CREATE_ROOM_SUCCESS = \"CREATE_ROOM_SUCCESS\";\r\nexport const CREATE_ROOM_FAILED = \"CREATE_ROOM_FAILED\";\r\n\r\nexport const UPDATE_ROOM = \"UPDATE_ROOM\";\r\nexport const UPDATE_ROOM_SUCCESS = \"UPDATE_ROOM_SUCCESS\";\r\nexport const UPDATE_ROOM_FAILED = \"UPDATE_ROOM_FAILED\";\r\n\r\nexport const DELETE_ROOM = \"DELETE_ROOM\";\r\nexport const DELETE_ROOM_SUCCESS = \"DELETE_ROOM_SUCCESS\";\r\nexport const DELETE_ROOM_FAILED = \"DELETE_ROOM_FAILED\";\r\n\r\n"],"sourceRoot":""}